{"meta":{"title":"Leouas","subtitle":"アゲイン","description":null,"author":null,"url":"leouas.top","root":"/"},"pages":[{"title":"","date":"2020-05-12T08:39:38.620Z","updated":"2020-05-12T08:39:38.620Z","comments":true,"path":"404.html","permalink":"leouas.top/404.html","excerpt":"","text":"404 - Not Found * { margin: 0; padding: 0; outline: none; font-family: \\5FAE\\8F6F\\96C5\\9ED1, 宋体; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; -khtml-user-select: none; user-select: none; cursor: default; font-weight: lighter; } .center { margin: 0 auto; color: #fff; font-weight: bolder; font-size: 72px; } .whole { width: 100%; height: 100%; line-height: 100%; position: fixed; bottom: 0; left: 0; z-index: -1000; overflow: hidden; } .whole img { width: 100%; height: 100%; } .mask { width: 100%; height: 100%; position: absolute; top: 0; left: 0; background: #000; opacity: 0.6; filter: alpha(opacity=60); } .b { width: 100%; text-align: center; height: 400px; position: absolute; top: 50%; margin-top: -230px } .a { width: 150px; height: 50px; margin-top: 30px } .a a { display: block; float: left; width: 150px; height: 50px; background: #fff; text-align: center; line-height: 50px; font-size: 18px; border-radius: 25px; color: #333 } .a a:hover { color: #000; box-shadow: #fff 0 0 20px } p { color: #fff; margin-top: 40px; font-size: 24px; } #num { margin: 0 5px; font-weight: bold; } var num = 5; function redirect() { num--; document.getElementById(\"num\").innerHTML = num; if (num < 0) { document.getElementById(\"num\").innerHTML = 0; location.href = \"https://www.hojun.cn\"; } } setInterval(\"redirect()\", 1000);"},{"title":"","date":"2020-05-12T08:39:38.635Z","updated":"2020-05-12T08:39:38.635Z","comments":true,"path":"warn.html","permalink":"leouas.top/warn.html","excerpt":"","text":"警告：不被支持的浏览器 body { width:600px; margin:50px auto; font:14px/1.5 'Trebuchet MS', sans-serif; text-align:center; background-color:#fafafa; } h1 { margin:0; color:#7D8B99; font-size:180px; } h2, p { color:#7D8B99; } a { color:#2EB695; text-decoration:none; } ! Not support IE9 and below 为保持体验良好，本站禁止不支持H5的浏览器访问 墙裂推荐使用 Chrome 或 Firefox 浏览器访问本站。"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-02-10T13:32:48.000Z","comments":false,"path":"bangumi/index.html","permalink":"leouas.top/bangumi/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-02-13T05:42:05.000Z","updated":"2020-02-13T05:42:05.000Z","comments":true,"path":"categories/index.html","permalink":"leouas.top/categories/index.html","excerpt":"","text":""},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2018-12-20T15:13:48.000Z","comments":true,"path":"comment/index.html","permalink":"leouas.top/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2018-12-20T15:13:05.000Z","comments":false,"path":"donate/index.html","permalink":"leouas.top/donate/index.html","excerpt":"","text":""},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2018-12-19T15:11:06.000Z","comments":true,"path":"links/index.html","permalink":"leouas.top/links/index.html","excerpt":"","text":""},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2018-12-20T15:14:38.000Z","comments":false,"path":"video/index.html","permalink":"leouas.top/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }"},{"title":"playlist","date":"2020-02-23T09:12:25.000Z","updated":"2020-02-23T09:12:25.000Z","comments":false,"path":"playlist/index.html","permalink":"leouas.top/playlist/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-02-13T05:42:24.000Z","updated":"2020-02-13T05:42:24.000Z","comments":false,"path":"tags/index.html","permalink":"leouas.top/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2018-12-12T14:14:36.000Z","comments":false,"path":"about/index.html","permalink":"leouas.top/about/index.html","excerpt":"","text":"[さくら荘のLeouas] 与&nbsp; Leouas&nbsp; 对话中... /*! * Vue.js v2.3.2 * (c) 2014-2017 Evan You * Released under the MIT License. */ !function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.Vue=t()}(this,function(){\"use strict\";function e(e){return void 0===e||null===e}function t(e){return void 0!==e&&null!==e}function n(e){return!0===e}function r(e){return\"string\"==typeof e||\"number\"==typeof e}function i(e){return null!==e&&\"object\"==typeof e}function o(e){return\"[object Object]\"===Ai.call(e)}function a(e){return\"[object RegExp]\"===Ai.call(e)}function s(e){return null==e?\"\":\"object\"==typeof e?JSON.stringify(e,null,2):String(e)}function c(e){var t=parseFloat(e);return isNaN(t)?e:t}function u(e,t){for(var n=Object.create(null),r=e.split(\",\"),i=0;i-1)return e.splice(n,1)}}function f(e,t){return Si.call(e,t)}function p(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}function d(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n}function v(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function h(e,t){for(var n in t)e[n]=t[n];return e}function m(e){for(var t={},n=0;n"}],"posts":[{"title":"NevadaCase","slug":"NevadaCase","date":"2020-10-29T13:37:53.000Z","updated":"2020-10-29T13:37:53.000Z","comments":true,"path":"NevadaCase/","link":"","permalink":"leouas.top/NevadaCase/","excerpt":"","text":"Nevada casepromo page https://ru.warface.com/promo/nevadacase Clues Code 1 Code 2 1 NEVADA MISSING 2 lockdown #nevadanoises 3 4 5 新特别行动 过场对话 训练场上的播放广播在布莱克伍德范围（在旧的，不是我们现在主服务器上的）将声音广播，在那里你可以听到以下内容。 [噪音]新闻[干扰]。从众多的消息来源中得知，在与莫哈韦沙漠交界的内华达州有人居住的[干扰]州，当地居民开始大规模消失。不排除他们已经消失了。我们已经尽了一切努力去寻找它们。我们会及时通知您。如果你有什么消息，可以拨打[干扰]~[噪音]电话举报…… (可能)漫画开头的对话 开始Sigma-3（九头蛇的团队）和沃顿将军的对话。这很可能是来自于开头的那段卡特场景。 💬所以，1F474，请回答。你听到了吗？ 💬听好了。 💬你要闯入莫哈韦沙漠死亡谷的黑木基地。在过去几个月里，该地区的失踪报告有所增加。 💬收到。 💬最近有一个不知名的男人联系我。他报告说，黑木基地的所有人员和保安都死了。不管这个匿名者是谁，他消息灵通，会成为你的协调人。 💬我们相信他吗？ 💬没有。 💬谁是我们的对手？ 💬那就由你自己去找吧。 来自特殊笔记本的信息💬玩家们将成为某种 “匿名者”。他的信息很多，所以期待四部的出版。 💬 Sigma-3，完毕。你在一个废弃的黑木基地的脚下。找到废弃基地周边的通行密码。寻找疏散时遗留的笔记本电脑。 💬不要惊慌。我承认，这里的动物群很不寻常。黑木曾试图控制一些凶猛而嗜血的东西。实践上更小心。然后他们把事情搞砸了。 💬找到第一个访问代码。我们还需要两个。 💬第二个访问代码上传。就剩下最后一个了。 💬代码激活。我们已经进入了外围。 💬大院的门是锁着的。启动附近的便携式电磁脉冲枪。这将禁用安全系统。这是一个危险的实验，但它应该是工作。 💬如果电荷累积，EMP枪就会发热。我们的花生一样的朋友会用强烈的热辐射攻击任何东西。捍卫汽车！ 💬 EMP电荷实际累积，30秒后发射。 💬没有其他办法进入综合体，唉。操作中止。 💬好奇怪啊。你看到那些东西扔在空中了吗？好吧，算了吧。门是开着的 欢迎来到野兽的嘴里，Sigma -3。 根据蓝图，你需要去中央房间。那里有一种技术可以帮助你在下层生存。 💬在电力恢复之前，你不能进入中央大厅。三台备用发电机分布在建筑群的不同地方。你必须开始每个。 💬，第一台发电机正在运行。中央大厅的电力已经恢复了三分之一。 无名氏 Part_1🦉某个“匿名者”将协调玩家。他收到了很多消息，因此希望发布一个包含四个部分的帖子： 💬Sigma-3，接待处。您正在前往废弃的黑木基地。查找底座外周的访问代码。寻找在疏散期间留下的笔记本电脑。 💬不要惊慌 我承认，动物区系很不寻常。布莱克伍德（Blackwood）试图控制一些凶猛嗜血的事情。几乎是超凡脱俗的。然后他们真的搞砸了。 💬找到第一个访问代码。还需要两个。 💬第二个访问代码已加载。最后一个仍然存在。 💬代码已激活。外围已访问。 💬大楼的门已上锁。在附近激活便携式EMP武器。这将禁用保护系统。危险的实验，但应该可以。 💬随着电荷的积累，EMP武器会发热。我们的蛛网动物朋友会在强烈的热辐射下攻击任何物体。保卫你的车！ 💬 EMP电荷实际上是在拍摄前30秒累积的。 💬不幸的是，没有其他方法可以进入综合大楼。操作被中断。 💬奇怪…您看到这些生物散布了吗？好吧，算了 门是开着的。欢迎来到野兽之口Sigma 3。 💬根据蓝图，您需要转到中央房间。有一种技术可以帮助您在下降到较低水平时得以幸免。 💬在恢复电源之前，您不会到达中央大厅。三个备用生成器位于大楼的不同部分。您需要运行所有人。 💬第一台发电机已经启动。中央房间的电源恢复了三分之一。 无名氏 Part_2💬第二个发电机正在运行。运行后者。 💬所有发电机都在运行。转到中央房间。 💬真正的地狱在等着你。您面前的汽车是您生存的机会。返回并收集尽可能多的资源。 💬控制一个自行火炮部队。这是您在此黑暗旅程中唯一的朋友。为简便起见，我称她为萨曼莎（Samantha）。 💬使用其他模块升级ACS。没有他们，萨曼莎的生命将很短暂，而您的失败将很快。 💬交通！这些是荨麻疹！当他们在路上时，汽车不会通过。 💬干扰通信丢失。您越深入，干扰就会越强。我们将遵守无线电通信规则。我们简短地说一下。交流结束。 💬不允许破坏机器。没有它，你将在漆黑的黑暗中被撕成碎片。 💬强地震震。大楼下面有东西。并且它移动。当务之急是找到萨曼莎并给他武装以尽可能致命的东西。 💬 相邻的房间里有足够的资源来改善汽车。 💬所以。欢迎！干扰更大。我把兴奋点放在低层。这些是荨麻疹！只要它们挡住了您的路，汽车就不会移动。 💬真奇怪。当出现错误时，干扰会放大很多倍。感觉就像我们这里还有另一个信号。向蜘蛛发出命令的信号。 💬顺便说一句，这将解释他们对EMP武器的反应。冲动切断了他们与他们指挥的联系。这就是为什么他们逃跑了。 无名氏 Part_3💬 在这个技术节点中，您可以在SAU上安装额外的模块。使用你找到的资源来升级你的机器。 💬发现了一件原型武器。在下一个技术节点。机器上的安装是重中之重。 💬路径被封锁。寻找终端…路径清晰。继续前进。 💬周围的储藏室。寻找资源。他们将被用来升级SAU。 💬萨曼莎有麻烦了。障碍物不消除，车就不走了。 💬交通畅通。全速前进！ 💬他来了。已经找到了萨曼莎所需的武器模块。当你完成其他修改后再安装。 💬开火。发射！ 💬你就快到了。我们就在几米之外。 💬天花板上的 “So_1F4AC”! 小心点 💬这里是震中，Sigma-3。打开大门。 💬门后有东西… …宏伟的。准备好去看看黑暗中隐藏着什么。 无名氏 Part_4💬这里有东西，但它是潜伏的。你必须把它引出来，对自己。下楼吧 萨曼莎将担任射击位置。 💬真他妈见鬼了。罗伊的女王。这就是给蛛魔下达命令的原因。心灵感应，无线电干扰… 这个蜂巢的大脑中心。杀了她，罗伊就会陷入厌世状态。 💬武器模块需要更多的动力。我们需要更多的力量！将动力电池推入发电机。 💬女王很脆弱! 在她恢复意识之前，对她造成最大程度的伤害! 💬看来这只生物被吓坏了。继续前进，再把它引出来。 💬每一声枪响都会摧毁萨曼莎的电池。快点把多余的细胞推入！ 💬女王很脆弱。射！ 💬她没地方可去了 你知道该怎么做。 💬所以，1F4AC的细胞！快点！ 💬王后座下的宝座令人咋舌! 怪物在痛苦中！ 💬小心你的爪子! 瞄准脆弱点射击! 完成它，Sigma-3！ 💬好了，好了，好了，好了。罗伊不受女王的控制，但他们的行为并不像蚁族… … 💬大队人马正在向你进发! 回来！来吧，现在！ 无名氏 Prat_5在结局中，将有以下内容的过场动画： 💬你比蛛形动物强什么，Sigma-3？ 💬你也会漫不经心地听从命令。在九头蛇里向我开枪 处决WEGA-5的家伙… … 💬女王死后，我控制了罗伊，野田。现在，我可以做任何事情。除了宽恕，什么都可以。 而值得注意的是，野田似乎就是那个匿名者。 ️️ Reference:http://fatherbonus.ru/nevadacase/https://t.me/warface_firuin/356https://t.me/warface_firuin","categories":[],"tags":[{"name":"warface","slug":"warface","permalink":"leouas.top/tags/warface/"}]},{"title":"warface-forever","slug":"warface-forever","date":"2020-10-11T03:43:13.130Z","updated":"2020-10-11T03:43:13.130Z","comments":true,"path":"warface-forever/","link":"","permalink":"leouas.top/warface-forever/","excerpt":"","text":"本以为自己是习惯孤独的 本以为自己就是习惯安安静静一个人的。可还是渐渐发现那不过是自己推脱的说辞，是没有多少朋友事实下的自我慰藉。 人生没有多少个600小时，我把这些时间花在了一个叫Warface的游戏上。一个每天活跃数峰值2000左右的游戏，大家低头不见抬头见，一次次见到熟悉的ID，团队一起配合拿下胜利是真的非常开心。 PVE一直是这个游戏的特色，一张困难图需要5个人非常默契的信任自己的搭档。每一次九头蛇的最后关卡我都特别紧张，好多次手臂发抖，两名SED队友掩护我，他们的护甲没有回复，越拖到后面越危险。我一旦失误，代价就是从新开始。到目前，足足有78次翻车。 交叉火力，yaoyao我和你互相清对方身后的兵 准备，打！ sniper：左手火箭，掉 R:右边右边 右边火箭 S:别着急别着急 我看着呢 （在看到Demoman后，狙击手会报其位置，击杀后说掉，如果其他人没有听到掉字，则第一时间帮忙击杀火箭兵） yaoyao你后面！ yaoyao死了，没必要再打了，我们重开 我玩这个游戏是因为有你们在啊 最近 domi_onni可能会退游，FaGuang_也不怎么完了。不知是有事了还是真的要退游了。 你们不在wf了，我也会退游了吧","categories":[],"tags":[]},{"title":"Sunrise & AutoHotKey","slug":"sunrise","date":"2020-09-07T10:27:03.000Z","updated":"2020-09-07T10:27:03.000Z","comments":true,"path":"sunrise/","link":"","permalink":"leouas.top/sunrise/","excerpt":"","text":"Love This Game AutoHotKey 程序 官网 https://www.autohotkey.com/ 中文说明文档 https://wyagd001.github.io/zh-cn/docs/AutoHotkey.htm 建议先看快速入门 大约10min看完 https://wyagd001.github.io/zh-cn/docs/Tutorial.htm 跳盾源码 快捷键为 {Caps Lock} 双击。注：只在Warface游戏里生效 程序 图标 视频演示 Your browser does not support the video tag. .ahk 文件 如何编译为 .exe AutoHotKey&nbsp;最好用的 编辑器","categories":[],"tags":[{"name":"Games","slug":"Games","permalink":"leouas.top/tags/Games/"}]},{"title":"Handwriting_Style_Font_Modification in Word","slug":"geek-word-font","date":"2020-06-15T06:41:25.000Z","updated":"2020-06-15T06:41:25.000Z","comments":false,"path":"geek-word-font/","link":"","permalink":"leouas.top/geek-word-font/","excerpt":"","text":"Word中，依次点击文件-&gt;选项-&gt;信任中心-&gt;信任中心设置-&gt;宏设置 然后 视图-&gt;宏 输入名称，回车编辑宏内容 宏作者：UncleSugar 链接：https://www.zhihu.com/question/20308770/answer/241699602 Sub 字体修改() &#39; &#39; 字体修改 宏 &#39; Dim R_Character As Range Dim FontSize(5) &#39; 字体大小在5个值之间进行波动，可以改写 FontSize(1) = &quot;21&quot; FontSize(2) = &quot;21.5&quot; FontSize(3) = &quot;22&quot; FontSize(4) = &quot;22.5&quot; FontSize(5) = &quot;23&quot; Dim FontName(3) &#39;字体名称在三种字体之间进行波动，可改写，但需要保证系统拥有下列字体 FontName(1) = &quot;修改此处的字体&quot; FontName(2) = &quot;修改此处的字体&quot; FontName(3) = &quot;修改此处的字体&quot; Dim ParagraphSpace(5) &#39;行间距 在一定以下值中均等分布，可改写 ParagraphSpace(1) = &quot;12&quot; ParagraphSpace(2) = &quot;13&quot; ParagraphSpace(3) = &quot;20&quot; ParagraphSpace(4) = &quot;7&quot; ParagraphSpace(5) = &quot;12&quot; &#39;不懂原理的话，不建议修改下列代码 For Each R_Character In ActiveDocument.Characters VBA.Randomize R_Character.Font.Name = FontName(Int(VBA.Rnd * 3) + 1) R_Character.Font.Size = FontSize(Int(VBA.Rnd * 5) + 1) R_Character.Font.Position = Int(VBA.Rnd * 3) + 1 R_Character.Font.Spacing = 0 Next Application.ScreenUpdating = True For Each Cur_Paragraph In ActiveDocument.Paragraphs Cur_Paragraph.LineSpacing = ParagraphSpace(Int(VBA.Rnd * 5) + 1) Next Application.ScreenUpdating = True End Sub","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[]},{"title":"千图成像","slug":"share-Thousand-Images","date":"2020-06-11T10:11:30.000Z","updated":"2020-06-11T10:11:30.000Z","comments":false,"path":"share-Thousand-Images/","link":"","permalink":"leouas.top/share-Thousand-Images/","excerpt":"","text":"第1步 打开素材 到ps里面 然后执行 滤镜 → 像素化 → 马赛克（22像素） 第2步 （批处理更改图像大小为22像素*22像素） 具体设置多少的像素结合所制作的图形计算好 打开窗口 → 动作 面板点击倒数第3个按钮新建一个组点击倒数第2个按钮新建一个动作 ，点击记录打开素材中的图片图像 → 图像大小 设置如下 新建一个文件夹 然后执行 ctrl+shift+s 保存到新建的文件里面关闭文档停止录制（点击动作面板第一个按钮） 第3步 文件--&gt;自动--&gt;批处理 第4步 文件--&gt;自动--&gt;联系表 第5步 编辑 --&gt;定义图案 第6步 回到最开始的图片，然后 新建一个图层 （图层面板倒数第2个按钮） 第7步 编辑--&gt;填充 选择图案 然后选择刚刚定义的图案（在最后一个） 第8步 将图层的混合模式改为 柔光","categories":[{"name":"share","slug":"share","permalink":"leouas.top/categories/share/"}],"tags":[{"name":"ps","slug":"ps","permalink":"leouas.top/tags/ps/"}]},{"title":"yaoyao_qiekn","slug":"warface","date":"2020-06-09T00:52:33.000Z","updated":"2020-06-09T00:52:33.000Z","comments":true,"path":"warface/","link":"","permalink":"leouas.top/warface/","excerpt":"","text":"Love This Game LOVE THIS GAME","categories":[],"tags":[{"name":"Games","slug":"Games","permalink":"leouas.top/tags/Games/"}]},{"title":"JavaScript 知识点导图","slug":"geek-JavaScript-Mindmap","date":"2020-05-29T10:30:08.000Z","updated":"2020-05-29T10:30:08.000Z","comments":false,"path":"geek-JavaScript-Mindmap/","link":"","permalink":"leouas.top/geek-JavaScript-Mindmap/","excerpt":"","text":"转载原作：： 原文地址：https://juejin.im/post/5ebb68796fb9a0435432df8e仓库地址：https://gitee.com/jinsexiaozhima/jiujin/tree/master/Mindmap 基础篇 常用方法篇 进阶篇 Http基础篇","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"leouas.top/tags/JavaScript/"}]},{"title":"Unlike","slug":"share-unlike","date":"2020-05-24T13:11:23.000Z","updated":"2020-05-24T13:11:23.000Z","comments":true,"path":"share-unlike/","link":"","permalink":"leouas.top/share-unlike/","excerpt":"","text":"wei# zhe shen me pei tu he yin yue yayayaya 那个 6月并不燥热的盛夏早就 过去了 我不曾知道自己来这里的理由如果那次选择还能在来一次的话或许我会在其他地方 说不出特别的喜欢，但可能真的不讨厌吧不然那个大一结尾我早就离开了 网上似乎满是劝退材料的言论其实我并没有多在意而当我回想前一年所学时 我惆怅了我不记得四大化学学过什么哪怕是基础的化学式和方程我开始质疑自己就这样下去我能够做什么 我什么也想不出来 材料是一门科学打笑地说当我没有足够强的数理基础本科学材料的时候可能这辈子都学不会材料了 ε=(´ο｀*)))唉 可是我又知道自己是几乎不太可能离开的。既然如此，想多少也没啥子用哈有机会 就多做自己喜欢的事情这样也就很好呀","categories":[{"name":"share","slug":"share","permalink":"leouas.top/categories/share/"}],"tags":[]},{"title":"工程力学实验02","slug":"whut-gclx-sy-02","date":"2020-05-24T12:18:32.000Z","updated":"2020-05-24T12:18:32.000Z","comments":true,"path":"whut-gclx-sy-02/","link":"","permalink":"leouas.top/whut-gclx-sy-02/","excerpt":"","text":"attention last post 2020-05-24 22:05:49 淦！","categories":[{"name":"whut","slug":"whut","permalink":"leouas.top/categories/whut/"}],"tags":[{"name":"工程力学实验","slug":"工程力学实验","permalink":"leouas.top/tags/%E5%B7%A5%E7%A8%8B%E5%8A%9B%E5%AD%A6%E5%AE%9E%E9%AA%8C/"}]},{"title":"v2ray配置","slug":"geek-v2ray","date":"2020-05-24T07:14:29.000Z","updated":"2020-05-24T07:14:29.000Z","comments":false,"path":"geek-v2ray/","link":"","permalink":"leouas.top/geek-v2ray/","excerpt":"","text":"安装脚本wget -N --no-check-certificate -q -O install.sh &quot;https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/master/install.sh&quot; &amp;&amp; chmod +x install.sh &amp;&amp; bash install.sh 确认时间同步 输入域名信息及端口域名需要提前解析至服务器 之后需要等待很长一段时间 安装完成页面 开启bbr加速wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh脚本内容wulabing/V2Ray_ws-tls_bash_onekey install.shhttps://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/master/install.sh #!/bin/bash PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin export PATH cd &quot;$( cd &quot;$(dirname &quot;$0&quot;)&quot; || exit pwd )&quot; || exit #==================================================== # System Request:Debian 9+/Ubuntu 18.04+/Centos 7+ # Author: wulabing # Dscription: V2ray ws+tls onekey Management # Version: 1.0 # email:admin@wulabing.com # Official document: www.v2ray.com #==================================================== #fonts color Green=&quot;\\033[32m&quot; Red=&quot;\\033[31m&quot; # Yellow=&quot;\\033[33m&quot; GreenBG=&quot;\\033[42;37m&quot; RedBG=&quot;\\033[41;37m&quot; Font=&quot;\\033[0m&quot; #notification information # Info=&quot;${Green}[信息]${Font}&quot; OK=&quot;${Green}[OK]${Font}&quot; Error=&quot;${Red}[错误]${Font}&quot; # 版本 shell_version=&quot;1.1.3.4&quot; shell_mode=&quot;None&quot; github_branch=&quot;master&quot; version_cmp=&quot;/tmp/version_cmp.tmp&quot; v2ray_conf_dir=&quot;/etc/v2ray&quot; nginx_conf_dir=&quot;/etc/nginx/conf/conf.d&quot; v2ray_conf=&quot;${v2ray_conf_dir}/config.json&quot; nginx_conf=&quot;${nginx_conf_dir}/v2ray.conf&quot; nginx_dir=&quot;/etc/nginx&quot; web_dir=&quot;/home/wwwroot&quot; nginx_openssl_src=&quot;/usr/local/src&quot; v2ray_bin_dir=&quot;/usr/bin/v2ray&quot; v2ray_info_file=&quot;$HOME/v2ray_info.inf&quot; v2ray_qr_config_file=&quot;/usr/local/vmess_qr.json&quot; nginx_systemd_file=&quot;/etc/systemd/system/nginx.service&quot; v2ray_systemd_file=&quot;/etc/systemd/system/v2ray.service&quot; v2ray_access_log=&quot;/var/log/v2ray/access.log&quot; v2ray_error_log=&quot;/var/log/v2ray/error.log&quot; amce_sh_file=&quot;/root/.acme.sh/acme.sh&quot; ssl_update_file=&quot;/usr/bin/ssl_update.sh&quot; nginx_version=&quot;1.16.1&quot; openssl_version=&quot;1.1.1g&quot; jemalloc_version=&quot;5.2.1&quot; old_config_status=&quot;off&quot; # v2ray_plugin_version=&quot;$(wget -qO- &quot;https://github.com/shadowsocks/v2ray-plugin/tags&quot; | grep -E &quot;/shadowsocks/v2ray-plugin/releases/tag/&quot; | head -1 | sed -r &#39;s/.*tag\\/v(.+)\\&quot;&gt;.*/\\1/&#39;)&quot; #移动旧版本配置信息 对小于 1.1.0 版本适配 [[ -f &quot;/etc/v2ray/vmess_qr.json&quot; ]] &amp;&amp; mv /etc/v2ray/vmess_qr.json $v2ray_qr_config_file #生成伪装路径 camouflage=&quot;/$(head -n 10 /dev/urandom | md5sum | head -c 8)/&quot; source &#39;/etc/os-release&#39; #从VERSION中提取发行版系统的英文名称，为了在debian/ubuntu下添加相对应的Nginx apt源 VERSION=$(echo &quot;${VERSION}&quot; | awk -F &quot;[()]&quot; &#39;{print $2}&#39;) check_system() { if [[ &quot;${ID}&quot; == &quot;centos&quot; &amp;&amp; ${VERSION_ID} -ge 7 ]]; then echo -e &quot;${OK} ${GreenBG} 当前系统为 Centos ${VERSION_ID} ${VERSION} ${Font}&quot; INS=&quot;yum&quot; elif [[ &quot;${ID}&quot; == &quot;debian&quot; &amp;&amp; ${VERSION_ID} -ge 8 ]]; then echo -e &quot;${OK} ${GreenBG} 当前系统为 Debian ${VERSION_ID} ${VERSION} ${Font}&quot; INS=&quot;apt&quot; $INS update ## 添加 Nginx apt源 elif [[ &quot;${ID}&quot; == &quot;ubuntu&quot; &amp;&amp; $(echo &quot;${VERSION_ID}&quot; | cut -d &#39;.&#39; -f1) -ge 16 ]]; then echo -e &quot;${OK} ${GreenBG} 当前系统为 Ubuntu ${VERSION_ID} ${UBUNTU_CODENAME} ${Font}&quot; INS=&quot;apt&quot; $INS update else echo -e &quot;${Error} ${RedBG} 当前系统为 ${ID} ${VERSION_ID} 不在支持的系统列表内，安装中断 ${Font}&quot; exit 1 fi $INS install dbus systemctl stop firewalld systemctl disable firewalld echo -e &quot;${OK} ${GreenBG} firewalld 已关闭 ${Font}&quot; systemctl stop ufw systemctl disable ufw echo -e &quot;${OK} ${GreenBG} ufw 已关闭 ${Font}&quot; } is_root() { if [ 0 == $UID ]; then echo -e &quot;${OK} ${GreenBG} 当前用户是root用户，进入安装流程 ${Font}&quot; sleep 3 else echo -e &quot;${Error} ${RedBG} 当前用户不是root用户，请切换到root用户后重新执行脚本 ${Font}&quot; exit 1 fi } judge() { if [[ 0 -eq $? ]]; then echo -e &quot;${OK} ${GreenBG} $1 完成 ${Font}&quot; sleep 1 else echo -e &quot;${Error} ${RedBG} $1 失败${Font}&quot; exit 1 fi } chrony_install() { ${INS} -y install chrony judge &quot;安装 chrony 时间同步服务 &quot; timedatectl set-ntp true if [[ &quot;${ID}&quot; == &quot;centos&quot; ]]; then systemctl enable chronyd &amp;&amp; systemctl restart chronyd else systemctl enable chrony &amp;&amp; systemctl restart chrony fi judge &quot;chronyd 启动 &quot; timedatectl set-timezone Asia/Shanghai echo -e &quot;${OK} ${GreenBG} 等待时间同步 ${Font}&quot; sleep 10 chronyc sourcestats -v chronyc tracking -v date read -rp &quot;请确认时间是否准确,误差范围±3分钟(Y/N): &quot; chrony_install [[ -z ${chrony_install} ]] &amp;&amp; chrony_install=&quot;Y&quot; case $chrony_install in [yY][eE][sS] | [yY]) echo -e &quot;${GreenBG} 继续安装 ${Font}&quot; sleep 2 ;; *) echo -e &quot;${RedBG} 安装终止 ${Font}&quot; exit 2 ;; esac } dependency_install() { ${INS} install wget git lsof -y if [[ &quot;${ID}&quot; == &quot;centos&quot; ]]; then ${INS} -y install crontabs else ${INS} -y install cron fi judge &quot;安装 crontab&quot; if [[ &quot;${ID}&quot; == &quot;centos&quot; ]]; then touch /var/spool/cron/root &amp;&amp; chmod 600 /var/spool/cron/root systemctl start crond &amp;&amp; systemctl enable crond else touch /var/spool/cron/crontabs/root &amp;&amp; chmod 600 /var/spool/cron/crontabs/root systemctl start cron &amp;&amp; systemctl enable cron fi judge &quot;crontab 自启动配置 &quot; ${INS} -y install bc judge &quot;安装 bc&quot; ${INS} -y install unzip judge &quot;安装 unzip&quot; ${INS} -y install qrencode judge &quot;安装 qrencode&quot; ${INS} -y install curl judge &quot;安装 crul&quot; if [[ &quot;${ID}&quot; == &quot;centos&quot; ]]; then ${INS} -y groupinstall &quot;Development tools&quot; else ${INS} -y install build-essential fi judge &quot;编译工具包 安装&quot; if [[ &quot;${ID}&quot; == &quot;centos&quot; ]]; then ${INS} -y install pcre pcre-devel zlib-devel epel-release else ${INS} -y install libpcre3 libpcre3-dev zlib1g-dev dbus fi # ${INS} -y install rng-tools # judge &quot;rng-tools 安装&quot; ${INS} -y install haveged # judge &quot;haveged 安装&quot; # sed -i -r &#39;/^HRNGDEVICE/d;/#HRNGDEVICE=\\/dev\\/null/a HRNGDEVICE=/dev/urandom&#39; /etc/default/rng-tools if [[ &quot;${ID}&quot; == &quot;centos&quot; ]]; then # systemctl start rngd &amp;&amp; systemctl enable rngd # judge &quot;rng-tools 启动&quot; systemctl start haveged &amp;&amp; systemctl enable haveged # judge &quot;haveged 启动&quot; else # systemctl start rng-tools &amp;&amp; systemctl enable rng-tools # judge &quot;rng-tools 启动&quot; systemctl start haveged &amp;&amp; systemctl enable haveged # judge &quot;haveged 启动&quot; fi } basic_optimization() { # 最大文件打开数 sed -i &#39;/^\\*\\ *soft\\ *nofile\\ *[[:digit:]]*/d&#39; /etc/security/limits.conf sed -i &#39;/^\\*\\ *hard\\ *nofile\\ *[[:digit:]]*/d&#39; /etc/security/limits.conf echo &#39;* soft nofile 65536&#39; &gt;&gt;/etc/security/limits.conf echo &#39;* hard nofile 65536&#39; &gt;&gt;/etc/security/limits.conf # 关闭 Selinux if [[ &quot;${ID}&quot; == &quot;centos&quot; ]]; then sed -i &#39;s/^SELINUX=.*/SELINUX=disabled/&#39; /etc/selinux/config setenforce 0 fi } port_alterid_set() { if [[ &quot;on&quot; != &quot;$old_config_status&quot; ]]; then read -rp &quot;请输入连接端口（default:443）:&quot; port [[ -z ${port} ]] &amp;&amp; port=&quot;443&quot; read -rp &quot;请输入alterID（default:2 仅允许填数字）:&quot; alterID [[ -z ${alterID} ]] &amp;&amp; alterID=&quot;2&quot; fi } modify_path() { if [[ &quot;on&quot; == &quot;$old_config_status&quot; ]]; then camouflage=&quot;$(grep &#39;\\&quot;path\\&quot;&#39; $v2ray_qr_config_file | awk -F &#39;&quot;&#39; &#39;{print $4}&#39;)&quot; fi sed -i &quot;/\\&quot;path\\&quot;/c \\\\\\t \\&quot;path\\&quot;:\\&quot;${camouflage}\\&quot;&quot; ${v2ray_conf} judge &quot;V2ray 伪装路径 修改&quot; } modify_alterid() { if [[ &quot;on&quot; == &quot;$old_config_status&quot; ]]; then alterID=&quot;$(grep &#39;\\&quot;aid\\&quot;&#39; $v2ray_qr_config_file | awk -F &#39;&quot;&#39; &#39;{print $4}&#39;)&quot; fi sed -i &quot;/\\&quot;alterId\\&quot;/c \\\\\\t \\&quot;alterId\\&quot;:${alterID}&quot; ${v2ray_conf} judge &quot;V2ray alterid 修改&quot; [ -f ${v2ray_qr_config_file} ] &amp;&amp; sed -i &quot;/\\&quot;aid\\&quot;/c \\\\ \\&quot;aid\\&quot;: \\&quot;${alterID}\\&quot;,&quot; ${v2ray_qr_config_file} echo -e &quot;${OK} ${GreenBG} alterID:${alterID} ${Font}&quot; } modify_inbound_port() { if [[ &quot;on&quot; == &quot;$old_config_status&quot; ]]; then port=&quot;$(info_extraction &#39;\\&quot;port\\&quot;&#39;)&quot; fi if [[ &quot;$shell_mode&quot; != &quot;h2&quot; ]]; then PORT=$((RANDOM + 10000)) sed -i &quot;/\\&quot;port\\&quot;/c \\ \\&quot;port\\&quot;:${PORT},&quot; ${v2ray_conf} else sed -i &quot;/\\&quot;port\\&quot;/c \\ \\&quot;port\\&quot;:${port},&quot; ${v2ray_conf} fi judge &quot;V2ray inbound_port 修改&quot; } modify_UUID() { [ -z &quot;$UUID&quot; ] &amp;&amp; UUID=$(cat /proc/sys/kernel/random/uuid) if [[ &quot;on&quot; == &quot;$old_config_status&quot; ]]; then UUID=&quot;$(info_extraction &#39;\\&quot;id\\&quot;&#39;)&quot; fi sed -i &quot;/\\&quot;id\\&quot;/c \\\\\\t \\&quot;id\\&quot;:\\&quot;${UUID}\\&quot;,&quot; ${v2ray_conf} judge &quot;V2ray UUID 修改&quot; [ -f ${v2ray_qr_config_file} ] &amp;&amp; sed -i &quot;/\\&quot;id\\&quot;/c \\\\ \\&quot;id\\&quot;: \\&quot;${UUID}\\&quot;,&quot; ${v2ray_qr_config_file} echo -e &quot;${OK} ${GreenBG} UUID:${UUID} ${Font}&quot; } modify_nginx_port() { if [[ &quot;on&quot; == &quot;$old_config_status&quot; ]]; then port=&quot;$(info_extraction &#39;\\&quot;port\\&quot;&#39;)&quot; fi sed -i &quot;/ssl http2;$/c \\\\\\tlisten ${port} ssl http2;&quot; ${nginx_conf} judge &quot;V2ray port 修改&quot; [ -f ${v2ray_qr_config_file} ] &amp;&amp; sed -i &quot;/\\&quot;port\\&quot;/c \\\\ \\&quot;port\\&quot;: \\&quot;${port}\\&quot;,&quot; ${v2ray_qr_config_file} echo -e &quot;${OK} ${GreenBG} 端口号:${port} ${Font}&quot; } modify_nginx_other() { sed -i &quot;/server_name/c \\\\\\tserver_name ${domain};&quot; ${nginx_conf} sed -i &quot;/location/c \\\\\\tlocation ${camouflage}&quot; ${nginx_conf} sed -i &quot;/proxy_pass/c \\\\\\tproxy_pass http://127.0.0.1:${PORT};&quot; ${nginx_conf} sed -i &quot;/return/c \\\\\\treturn 301 https://${domain}\\$request_uri;&quot; ${nginx_conf} #sed -i &quot;27i \\\\\\tproxy_intercept_errors on;&quot; ${nginx_dir}/conf/nginx.conf } web_camouflage() { ##请注意 这里和LNMP脚本的默认路径冲突，千万不要在安装了LNMP的环境下使用本脚本，否则后果自负 rm -rf /home/wwwroot mkdir -p /home/wwwroot cd /home/wwwroot || exit git clone https://github.com/wulabing/3DCEList.git judge &quot;web 站点伪装&quot; } v2ray_install() { if [[ -d /root/v2ray ]]; then rm -rf /root/v2ray fi if [[ -d /etc/v2ray ]]; then rm -rf /etc/v2ray fi mkdir -p /root/v2ray cd /root/v2ray || exit wget -N --no-check-certificate https://install.direct/go.sh ## wget http://install.direct/go.sh if [[ -f go.sh ]]; then rm -rf $v2ray_systemd_file systemctl daemon-reload bash go.sh --force judge &quot;安装 V2ray&quot; else echo -e &quot;${Error} ${RedBG} V2ray 安装文件下载失败，请检查下载地址是否可用 ${Font}&quot; exit 4 fi # 清除临时文件 rm -rf /root/v2ray } nginx_exist_check() { if [[ -f &quot;/etc/nginx/sbin/nginx&quot; ]]; then echo -e &quot;${OK} ${GreenBG} Nginx已存在，跳过编译安装过程 ${Font}&quot; sleep 2 elif [[ -d &quot;/usr/local/nginx/&quot; ]]; then echo -e &quot;${OK} ${GreenBG} 检测到其他套件安装的Nginx，继续安装会造成冲突，请处理后安装${Font}&quot; exit 1 else nginx_install fi } nginx_install() { # if [[ -d &quot;/etc/nginx&quot; ]];then # rm -rf /etc/nginx # fi wget -nc --no-check-certificate http://nginx.org/download/nginx-${nginx_version}.tar.gz -P ${nginx_openssl_src} judge &quot;Nginx 下载&quot; wget -nc --no-check-certificate https://www.openssl.org/source/openssl-${openssl_version}.tar.gz -P ${nginx_openssl_src} judge &quot;openssl 下载&quot; wget -nc --no-check-certificate https://github.com/jemalloc/jemalloc/releases/download/${jemalloc_version}/jemalloc-${jemalloc_version}.tar.bz2 -P ${nginx_openssl_src} judge &quot;jemalloc 下载&quot; cd ${nginx_openssl_src} || exit [[ -d nginx-&quot;$nginx_version&quot; ]] &amp;&amp; rm -rf nginx-&quot;$nginx_version&quot; tar -zxvf nginx-&quot;$nginx_version&quot;.tar.gz [[ -d openssl-&quot;$openssl_version&quot; ]] &amp;&amp; rm -rf openssl-&quot;$openssl_version&quot; tar -zxvf openssl-&quot;$openssl_version&quot;.tar.gz [[ -d jemalloc-&quot;${jemalloc_version}&quot; ]] &amp;&amp; rm -rf jemalloc-&quot;${jemalloc_version}&quot; tar -xvf jemalloc-&quot;${jemalloc_version}&quot;.tar.bz2 [[ -d &quot;$nginx_dir&quot; ]] &amp;&amp; rm -rf ${nginx_dir} echo -e &quot;${OK} ${GreenBG} 即将开始编译安装 jemalloc ${Font}&quot; sleep 2 cd jemalloc-${jemalloc_version} || exit ./configure judge &quot;编译检查&quot; make &amp;&amp; make install judge &quot;jemalloc 编译安装&quot; echo &#39;/usr/local/lib&#39; &gt;/etc/ld.so.conf.d/local.conf ldconfig echo -e &quot;${OK} ${GreenBG} 即将开始编译安装 Nginx, 过程稍久，请耐心等待 ${Font}&quot; sleep 4 cd ../nginx-${nginx_version} || exit ./configure --prefix=&quot;${nginx_dir}&quot; \\ --with-http_ssl_module \\ --with-http_gzip_static_module \\ --with-http_stub_status_module \\ --with-pcre \\ --with-http_realip_module \\ --with-http_flv_module \\ --with-http_mp4_module \\ --with-http_secure_link_module \\ --with-http_v2_module \\ --with-cc-opt=&#39;-O3&#39; \\ --with-ld-opt=&quot;-ljemalloc&quot; \\ --with-openssl=../openssl-&quot;$openssl_version&quot; judge &quot;编译检查&quot; make &amp;&amp; make install judge &quot;Nginx 编译安装&quot; # 修改基本配置 sed -i &#39;s/#user nobody;/user root;/&#39; ${nginx_dir}/conf/nginx.conf sed -i &#39;s/worker_processes 1;/worker_processes 3;/&#39; ${nginx_dir}/conf/nginx.conf sed -i &#39;s/ worker_connections 1024;/ worker_connections 4096;/&#39; ${nginx_dir}/conf/nginx.conf sed -i &#39;$i include conf.d/*.conf;&#39; ${nginx_dir}/conf/nginx.conf # 删除临时文件 rm -rf ../nginx-&quot;${nginx_version}&quot; rm -rf ../openssl-&quot;${openssl_version}&quot; rm -rf ../nginx-&quot;${nginx_version}&quot;.tar.gz rm -rf ../openssl-&quot;${openssl_version}&quot;.tar.gz # 添加配置文件夹，适配旧版脚本 mkdir ${nginx_dir}/conf/conf.d } ssl_install() { if [[ &quot;${ID}&quot; == &quot;centos&quot; ]]; then ${INS} install socat nc -y else ${INS} install socat netcat -y fi judge &quot;安装 SSL 证书生成脚本依赖&quot; curl https://get.acme.sh | sh judge &quot;安装 SSL 证书生成脚本&quot; } domain_check() { read -rp &quot;请输入你的域名信息(eg:www.wulabing.com):&quot; domain domain_ip=$(ping &quot;${domain}&quot; -c 1 | sed &#39;1{s/[^(]*(//;s/).*//;q}&#39;) echo -e &quot;${OK} ${GreenBG} 正在获取 公网ip 信息，请耐心等待 ${Font}&quot; local_ip=$(curl -4 ip.sb) echo -e &quot;域名dns解析IP：${domain_ip}&quot; echo -e &quot;本机IP: ${local_ip}&quot; sleep 2 if [[ $(echo &quot;${local_ip}&quot; | tr &#39;.&#39; &#39;+&#39; | bc) -eq $(echo &quot;${domain_ip}&quot; | tr &#39;.&#39; &#39;+&#39; | bc) ]]; then echo -e &quot;${OK} ${GreenBG} 域名dns解析IP 与 本机IP 匹配 ${Font}&quot; sleep 2 else echo -e &quot;${Error} ${RedBG} 请确保域名添加了正确的 A 记录，否则将无法正常使用 V2ray ${Font}&quot; echo -e &quot;${Error} ${RedBG} 域名dns解析IP 与 本机IP 不匹配 是否继续安装？（y/n）${Font}&quot; &amp;&amp; read -r install case $install in [yY][eE][sS] | [yY]) echo -e &quot;${GreenBG} 继续安装 ${Font}&quot; sleep 2 ;; *) echo -e &quot;${RedBG} 安装终止 ${Font}&quot; exit 2 ;; esac fi } port_exist_check() { if [[ 0 -eq $(lsof -i:&quot;$1&quot; | grep -i -c &quot;listen&quot;) ]]; then echo -e &quot;${OK} ${GreenBG} $1 端口未被占用 ${Font}&quot; sleep 1 else echo -e &quot;${Error} ${RedBG} 检测到 $1 端口被占用，以下为 $1 端口占用信息 ${Font}&quot; lsof -i:&quot;$1&quot; echo -e &quot;${OK} ${GreenBG} 5s 后将尝试自动 kill 占用进程 ${Font}&quot; sleep 5 lsof -i:&quot;$1&quot; | awk &#39;{print $2}&#39; | grep -v &quot;PID&quot; | xargs kill -9 echo -e &quot;${OK} ${GreenBG} kill 完成 ${Font}&quot; sleep 1 fi } acme() { if &quot;$HOME&quot;/.acme.sh/acme.sh --issue -d &quot;${domain}&quot; --standalone -k ec-256 --force --test; then echo -e &quot;${OK} ${GreenBG} SSL 证书测试签发成功，开始正式签发 ${Font}&quot; rm -rf &quot;$HOME/.acme.sh/${domain}_ecc&quot; sleep 2 else echo -e &quot;${Error} ${RedBG} SSL 证书测试签发失败 ${Font}&quot; rm -rf &quot;$HOME/.acme.sh/${domain}_ecc&quot; exit 1 fi if &quot;$HOME&quot;/.acme.sh/acme.sh --issue -d &quot;${domain}&quot; --standalone -k ec-256 --force; then echo -e &quot;${OK} ${GreenBG} SSL 证书生成成功 ${Font}&quot; sleep 2 mkdir /data if &quot;$HOME&quot;/.acme.sh/acme.sh --installcert -d &quot;${domain}&quot; --fullchainpath /data/v2ray.crt --keypath /data/v2ray.key --ecc --force; then echo -e &quot;${OK} ${GreenBG} 证书配置成功 ${Font}&quot; sleep 2 fi else echo -e &quot;${Error} ${RedBG} SSL 证书生成失败 ${Font}&quot; rm -rf &quot;$HOME/.acme.sh/${domain}_ecc&quot; exit 1 fi } v2ray_conf_add_tls() { cd /etc/v2ray || exit wget --no-check-certificate https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/${github_branch}/tls/config.json -O config.json modify_path modify_alterid modify_inbound_port modify_UUID } v2ray_conf_add_h2() { cd /etc/v2ray || exit wget --no-check-certificate https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/${github_branch}/http2/config.json -O config.json modify_path modify_alterid modify_inbound_port modify_UUID } old_config_exist_check() { if [[ -f $v2ray_qr_config_file ]]; then echo -e &quot;${OK} ${GreenBG} 检测到旧配置文件，是否读取旧文件配置 [Y/N]? ${Font}&quot; read -r ssl_delete case $ssl_delete in [yY][eE][sS] | [yY]) echo -e &quot;${OK} ${GreenBG} 已保留旧配置 ${Font}&quot; old_config_status=&quot;on&quot; port=$(info_extraction &#39;\\&quot;port\\&quot;&#39;) ;; *) rm -rf $v2ray_qr_config_file echo -e &quot;${OK} ${GreenBG} 已删除旧配置 ${Font}&quot; ;; esac fi } nginx_conf_add() { touch ${nginx_conf_dir}/v2ray.conf cat &gt;${nginx_conf_dir}/v2ray.conf &lt;&lt;EOF server { listen 443 ssl http2; ssl_certificate /data/v2ray.crt; ssl_certificate_key /data/v2ray.key; ssl_protocols TLSv1.3; ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5; server_name serveraddr.com; index index.html index.htm; root /home/wwwroot/3DCEList; error_page 400 = /400.html; location /ray/ { proxy_redirect off; proxy_pass http://127.0.0.1:10000; proxy_http_version 1.1; proxy_set_header X-Real-IP \\$remote_addr; proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for; proxy_set_header Upgrade \\$http_upgrade; proxy_set_header Connection &quot;upgrade&quot;; proxy_set_header Host \\$http_host; } } server { listen 80; server_name serveraddr.com; return 301 https://use.shadowsocksr.win\\$request_uri; } EOF modify_nginx_port modify_nginx_other judge &quot;Nginx 配置修改&quot; } start_process_systemd() { systemctl daemon-reload if [[ &quot;$shell_mode&quot; != &quot;h2&quot; ]]; then systemctl restart nginx judge &quot;Nginx 启动&quot; fi systemctl restart v2ray judge &quot;V2ray 启动&quot; } enable_process_systemd() { systemctl enable v2ray judge &quot;设置 v2ray 开机自启&quot; if [[ &quot;$shell_mode&quot; != &quot;h2&quot; ]]; then systemctl enable nginx judge &quot;设置 Nginx 开机自启&quot; fi } stop_process_systemd() { if [[ &quot;$shell_mode&quot; != &quot;h2&quot; ]]; then systemctl stop nginx fi systemctl stop v2ray } nginx_process_disabled() { [ -f $nginx_systemd_file ] &amp;&amp; systemctl stop nginx &amp;&amp; systemctl disable nginx } #debian 系 9 10 适配 #rc_local_initialization(){ # if [[ -f /etc/rc.local ]];then # chmod +x /etc/rc.local # else # touch /etc/rc.local &amp;&amp; chmod +x /etc/rc.local # echo &quot;#!/bin/bash&quot; &gt;&gt; /etc/rc.local # systemctl start rc-local # fi # # judge &quot;rc.local 配置&quot; #} acme_cron_update() { wget -N -P /usr/bin --no-check-certificate &quot;https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/dev/ssl_update.sh&quot; if [[ &quot;${ID}&quot; == &quot;centos&quot; ]]; then # sed -i &quot;/acme.sh/c 0 3 * * 0 \\&quot;/root/.acme.sh\\&quot;/acme.sh --cron --home \\&quot;/root/.acme.sh\\&quot; \\ # &amp;&gt; /dev/null&quot; /var/spool/cron/root sed -i &quot;/acme.sh/c 0 3 * * 0 bash ${ssl_update_file}&quot; /var/spool/cron/root else # sed -i &quot;/acme.sh/c 0 3 * * 0 \\&quot;/root/.acme.sh\\&quot;/acme.sh --cron --home \\&quot;/root/.acme.sh\\&quot; \\ # &amp;&gt; /dev/null&quot; /var/spool/cron/crontabs/root sed -i &quot;/acme.sh/c 0 3 * * 0 bash ${ssl_update_file}&quot; /var/spool/cron/crontabs/root fi judge &quot;cron 计划任务更新&quot; } vmess_qr_config_tls_ws() { cat &gt;$v2ray_qr_config_file &lt;&lt;-EOF { &quot;v&quot;: &quot;2&quot;, &quot;ps&quot;: &quot;wulabing_${domain}&quot;, &quot;add&quot;: &quot;${domain}&quot;, &quot;port&quot;: &quot;${port}&quot;, &quot;id&quot;: &quot;${UUID}&quot;, &quot;aid&quot;: &quot;${alterID}&quot;, &quot;net&quot;: &quot;ws&quot;, &quot;type&quot;: &quot;none&quot;, &quot;host&quot;: &quot;${domain}&quot;, &quot;path&quot;: &quot;${camouflage}&quot;, &quot;tls&quot;: &quot;tls&quot; } EOF } vmess_qr_config_h2() { cat &gt;$v2ray_qr_config_file &lt;&lt;-EOF { &quot;v&quot;: &quot;2&quot;, &quot;ps&quot;: &quot;wulabing_${domain}&quot;, &quot;add&quot;: &quot;${domain}&quot;, &quot;port&quot;: &quot;${port}&quot;, &quot;id&quot;: &quot;${UUID}&quot;, &quot;aid&quot;: &quot;${alterID}&quot;, &quot;net&quot;: &quot;h2&quot;, &quot;type&quot;: &quot;none&quot;, &quot;path&quot;: &quot;${camouflage}&quot;, &quot;tls&quot;: &quot;tls&quot; } EOF } vmess_qr_link_image() { vmess_link=&quot;vmess://$(base64 -w 0 $v2ray_qr_config_file)&quot; { echo -e &quot;$Red 二维码: $Font&quot; echo -n &quot;${vmess_link}&quot; | qrencode -o - -t utf8 echo -e &quot;${Red} URL导入链接:${vmess_link} ${Font}&quot; } &gt;&gt;&quot;${v2ray_info_file}&quot; } info_extraction() { grep &quot;$1&quot; $v2ray_qr_config_file | awk -F &#39;&quot;&#39; &#39;{print $4}&#39; } basic_information() { { echo -e &quot;${OK} ${GreenBG} V2ray+ws+tls 安装成功&quot; echo -e &quot;${Red} V2ray 配置信息 ${Font}&quot; echo -e &quot;${Red} 地址（address）:${Font} $(info_extraction &#39;\\&quot;add\\&quot;&#39;) &quot; echo -e &quot;${Red} 端口（port）：${Font} $(info_extraction &#39;\\&quot;port\\&quot;&#39;) &quot; echo -e &quot;${Red} 用户id（UUID）：${Font} $(info_extraction &#39;\\&quot;id\\&quot;&#39;)&quot; echo -e &quot;${Red} 额外id（alterId）：${Font} $(info_extraction &#39;\\&quot;aid\\&quot;&#39;)&quot; echo -e &quot;${Red} 加密方式（security）：${Font} 自适应 &quot; echo -e &quot;${Red} 传输协议（network）：${Font} $(info_extraction &#39;\\&quot;net\\&quot;&#39;) &quot; echo -e &quot;${Red} 伪装类型（type）：${Font} none &quot; echo -e &quot;${Red} 路径（不要落下/）：${Font} $(info_extraction &#39;\\&quot;path\\&quot;&#39;) &quot; echo -e &quot;${Red} 底层传输安全：${Font} tls &quot; } &gt;&quot;${v2ray_info_file}&quot; } show_information() { cat &quot;${v2ray_info_file}&quot; } ssl_judge_and_install() { if [[ -f &quot;/data/v2ray.key&quot; || -f &quot;/data/v2ray.crt&quot; ]]; then echo &quot;/data 目录下证书文件已存在&quot; echo -e &quot;${OK} ${GreenBG} 是否删除 [Y/N]? ${Font}&quot; read -r ssl_delete case $ssl_delete in [yY][eE][sS] | [yY]) rm -rf /data/* echo -e &quot;${OK} ${GreenBG} 已删除 ${Font}&quot; ;; *) ;; esac fi if [[ -f &quot;/data/v2ray.key&quot; || -f &quot;/data/v2ray.crt&quot; ]]; then echo &quot;证书文件已存在&quot; elif [[ -f &quot;$HOME/.acme.sh/${domain}_ecc/${domain}.key&quot; &amp;&amp; -f &quot;$HOME/.acme.sh/${domain}_ecc/${domain}.cer&quot; ]]; then echo &quot;证书文件已存在&quot; &quot;$HOME&quot;/.acme.sh/acme.sh --installcert -d &quot;${domain}&quot; --fullchainpath /data/v2ray.crt --keypath /data/v2ray.key --ecc judge &quot;证书应用&quot; else ssl_install acme fi } nginx_systemd() { cat &gt;$nginx_systemd_file &lt;&lt;EOF [Unit] Description=The NGINX HTTP and reverse proxy server After=syslog.target network.target remote-fs.target nss-lookup.target [Service] Type=forking PIDFile=/etc/nginx/logs/nginx.pid ExecStartPre=/etc/nginx/sbin/nginx -t ExecStart=/etc/nginx/sbin/nginx -c ${nginx_dir}/conf/nginx.conf ExecReload=/etc/nginx/sbin/nginx -s reload ExecStop=/bin/kill -s QUIT \\$MAINPID PrivateTmp=true [Install] WantedBy=multi-user.target EOF judge &quot;Nginx systemd ServerFile 添加&quot; systemctl daemon-reload } tls_type() { if [[ -f &quot;/etc/nginx/sbin/nginx&quot; ]] &amp;&amp; [[ -f &quot;$nginx_conf&quot; ]] &amp;&amp; [[ &quot;$shell_mode&quot; == &quot;ws&quot; ]]; then echo &quot;请选择支持的 TLS 版本（default:3）:&quot; echo &quot;请注意,如果你使用 Quantaumlt X / 路由器 / 旧版 Shadowrocket / 低于 4.18.1 版本的 V2ray core 请选择 兼容模式&quot; echo &quot;1: TLS1.1 TLS1.2 and TLS1.3（兼容模式）&quot; echo &quot;2: TLS1.2 and TLS1.3 (兼容模式)&quot; echo &quot;3: TLS1.3 only&quot; read -rp &quot;请输入：&quot; tls_version [[ -z ${tls_version} ]] &amp;&amp; tls_version=3 if [[ $tls_version == 3 ]]; then sed -i &#39;s/ssl_protocols.*/ssl_protocols TLSv1.3;/&#39; $nginx_conf echo -e &quot;${OK} ${GreenBG} 已切换至 TLS1.3 only ${Font}&quot; elif [[ $tls_version == 1 ]]; then sed -i &#39;s/ssl_protocols.*/ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;/&#39; $nginx_conf echo -e &quot;${OK} ${GreenBG} 已切换至 TLS1.1 TLS1.2 and TLS1.3 ${Font}&quot; else sed -i &#39;s/ssl_protocols.*/ssl_protocols TLSv1.2 TLSv1.3;/&#39; $nginx_conf echo -e &quot;${OK} ${GreenBG} 已切换至 TLS1.2 and TLS1.3 ${Font}&quot; fi systemctl restart nginx judge &quot;Nginx 重启&quot; else echo -e &quot;${Error} ${RedBG} Nginx 或 配置文件不存在 或当前安装版本为 h2 ，请正确安装脚本后执行${Font}&quot; fi } show_access_log() { [ -f ${v2ray_access_log} ] &amp;&amp; tail -f ${v2ray_access_log} || echo -e &quot;${RedBG}log文件不存在${Font}&quot; } show_error_log() { [ -f ${v2ray_error_log} ] &amp;&amp; tail -f ${v2ray_error_log} || echo -e &quot;${RedBG}log文件不存在${Font}&quot; } ssl_update_manuel() { [ -f ${amce_sh_file} ] &amp;&amp; &quot;/root/.acme.sh&quot;/acme.sh --cron --home &quot;/root/.acme.sh&quot; || echo -e &quot;${RedBG}证书签发工具不存在，请确认你是否使用了自己的证书${Font}&quot; domain=&quot;$(info_extraction &#39;\\&quot;add\\&quot;&#39;)&quot; &quot;$HOME&quot;/.acme.sh/acme.sh --installcert -d &quot;${domain}&quot; --fullchainpath /data/v2ray.crt --keypath /data/v2ray.key --ecc } bbr_boost_sh() { [ -f &quot;tcp.sh&quot; ] &amp;&amp; rm -rf ./tcp.sh wget -N --no-check-certificate &quot;https://github.com/ylx2016/Linux-NetSpeed/releases/download/sh/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh } mtproxy_sh() { [ -f &quot;mtproxy_go.sh&quot; ] &amp;&amp; rm -rf ./mtproxy_go.sh wget -N --no-check-certificate https://github.com/whunt1/onekeymakemtg/raw/master/mtproxy_go.sh &amp;&amp; chmod +x mtproxy_go.sh &amp;&amp; ./mtproxy_go.sh } uninstall_all() { stop_process_systemd [[ -f $nginx_systemd_file ]] &amp;&amp; rm -f $nginx_systemd_file [[ -f $v2ray_systemd_file ]] &amp;&amp; rm -f $v2ray_systemd_file [[ -d $v2ray_bin_dir ]] &amp;&amp; rm -rf $v2ray_bin_dir if [[ -d $nginx_dir ]]; then echo -e &quot;${OK} ${Green} 是否卸载 Nginx [Y/N]? ${Font}&quot; read -r uninstall_nginx case $uninstall_nginx in [yY][eE][sS] | [yY]) rm -rf $nginx_dir echo -e &quot;${OK} ${Green} 已卸载 Nginx ${Font}&quot; ;; *) ;; esac fi [[ -d $v2ray_conf_dir ]] &amp;&amp; rm -rf $v2ray_conf_dir [[ -d $web_dir ]] &amp;&amp; rm -rf $web_dir systemctl daemon-reload echo -e &quot;${OK} ${GreenBG} 已卸载，SSL证书文件已保留 ${Font}&quot; } delete_tls_key_and_crt() { [[ -f $HOME/.acme.sh/acme.sh ]] &amp;&amp; /root/.acme.sh/acme.sh uninstall &gt;/dev/null 2&gt;&amp;1 [[ -d $HOME/.acme.sh ]] &amp;&amp; rm -rf &quot;$HOME/.acme.sh&quot; echo -e &quot;${OK} ${GreenBG} 已清空证书遗留文件 ${Font}&quot; } judge_mode() { if [ -f $v2ray_bin_dir/v2ray ]; then if grep -q &quot;ws&quot; $v2ray_qr_config_file; then shell_mode=&quot;ws&quot; elif grep -q &quot;h2&quot; $v2ray_qr_config_file; then shell_mode=&quot;h2&quot; fi fi } install_v2ray_ws_tls() { is_root check_system chrony_install dependency_install basic_optimization domain_check old_config_exist_check port_alterid_set v2ray_install port_exist_check 80 port_exist_check &quot;${port}&quot; nginx_exist_check v2ray_conf_add_tls nginx_conf_add web_camouflage ssl_judge_and_install nginx_systemd vmess_qr_config_tls_ws basic_information vmess_qr_link_image tls_type show_information start_process_systemd enable_process_systemd acme_cron_update } install_v2_h2() { is_root check_system chrony_install dependency_install basic_optimization domain_check old_config_exist_check port_alterid_set v2ray_install port_exist_check 80 port_exist_check &quot;${port}&quot; v2ray_conf_add_h2 ssl_judge_and_install vmess_qr_config_h2 basic_information vmess_qr_link_image show_information start_process_systemd enable_process_systemd } update_sh() { ol_version=$(curl -L -s https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/${github_branch}/install.sh | grep &quot;shell_version=&quot; | head -1 | awk -F &#39;=|&quot;&#39; &#39;{print $3}&#39;) echo &quot;$ol_version&quot; &gt;$version_cmp echo &quot;$shell_version&quot; &gt;&gt;$version_cmp if [[ &quot;$shell_version&quot; &lt; &quot;$(sort -rV $version_cmp | head -1)&quot; ]]; then echo -e &quot;${OK} ${GreenBG} 存在新版本，是否更新 [Y/N]? ${Font}&quot; read -r update_confirm case $update_confirm in [yY][eE][sS] | [yY]) wget -N --no-check-certificate https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/${github_branch}/install.sh echo -e &quot;${OK} ${GreenBG} 更新完成 ${Font}&quot; exit 0 ;; *) ;; esac else echo -e &quot;${OK} ${GreenBG} 当前版本为最新版本 ${Font}&quot; fi } maintain() { echo -e &quot;${RedBG}该选项暂时无法使用${Font}&quot; echo -e &quot;${RedBG}$1${Font}&quot; exit 0 } list() { case $1 in tls_modify) tls_type ;; uninstall) uninstall_all ;; crontab_modify) acme_cron_update ;; boost) bbr_boost_sh ;; *) menu ;; esac } menu() { update_sh echo -e &quot;\\t V2ray 安装管理脚本 ${Red}[${shell_version}]${Font}&quot; echo -e &quot;\\t---authored by wulabing---&quot; echo -e &quot;\\thttps://github.com/wulabing\\n&quot; echo -e &quot;当前已安装版本:${shell_mode}\\n&quot; echo -e &quot;—————————————— 安装向导 ——————————————&quot;&quot;&quot; echo -e &quot;${Green}0.${Font} 升级 脚本&quot; echo -e &quot;${Green}1.${Font} 安装 V2Ray (Nginx+ws+tls)&quot; echo -e &quot;${Green}2.${Font} 安装 V2Ray (http/2)&quot; echo -e &quot;${Green}3.${Font} 升级 V2Ray core&quot; echo -e &quot;—————————————— 配置变更 ——————————————&quot; echo -e &quot;${Green}4.${Font} 变更 UUID&quot; echo -e &quot;${Green}5.${Font} 变更 alterid&quot; echo -e &quot;${Green}6.${Font} 变更 port&quot; echo -e &quot;${Green}7.${Font} 变更 TLS 版本(仅ws+tls有效)&quot; echo -e &quot;—————————————— 查看信息 ——————————————&quot; echo -e &quot;${Green}8.${Font} 查看 实时访问日志&quot; echo -e &quot;${Green}9.${Font} 查看 实时错误日志&quot; echo -e &quot;${Green}10.${Font} 查看 V2Ray 配置信息&quot; echo -e &quot;—————————————— 其他选项 ——————————————&quot; echo -e &quot;${Green}11.${Font} 安装 4合1 bbr 锐速安装脚本&quot; echo -e &quot;${Green}12.${Font} 安装 MTproxy(支持TLS混淆)&quot; echo -e &quot;${Green}13.${Font} 证书 有效期更新&quot; echo -e &quot;${Green}14.${Font} 卸载 V2Ray&quot; echo -e &quot;${Green}15.${Font} 更新 证书crontab计划任务&quot; echo -e &quot;${Green}16.${Font} 清空 证书遗留文件&quot; echo -e &quot;${Green}17.${Font} 退出 \\n&quot; read -rp &quot;请输入数字：&quot; menu_num case $menu_num in 0) update_sh ;; 1) shell_mode=&quot;ws&quot; install_v2ray_ws_tls ;; 2) shell_mode=&quot;h2&quot; install_v2_h2 ;; 3) bash &lt;(curl -L -s https://install.direct/go.sh) ;; 4) read -rp &quot;请输入UUID:&quot; UUID modify_UUID start_process_systemd ;; 5) read -rp &quot;请输入alterID:&quot; alterID modify_alterid start_process_systemd ;; 6) read -rp &quot;请输入连接端口:&quot; port if grep -q &quot;ws&quot; $v2ray_qr_config_file; then modify_nginx_port elif grep -q &quot;h2&quot; $v2ray_qr_config_file; then modify_inbound_port fi start_process_systemd ;; 7) tls_type ;; 8) show_access_log ;; 9) show_error_log ;; 10) basic_information vmess_qr_link_image show_information ;; 11) bbr_boost_sh ;; 12) mtproxy_sh ;; 13) stop_process_systemd ssl_update_manuel start_process_systemd ;; 14) uninstall_all ;; 15) acme_cron_update ;; 16) delete_tls_key_and_crt ;; 17) exit 0 ;; *) echo -e &quot;${RedBG}请输入正确的数字${Font}&quot; ;; esac } judge_mode list &quot;$1&quot;","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[]},{"title":"配置git代理","slug":"geek-git-proxy","date":"2020-05-06T11:34:12.000Z","updated":"2020-05-06T11:34:12.000Z","comments":false,"path":"geek-git-proxy/","link":"","permalink":"leouas.top/geek-git-proxy/","excerpt":"","text":"git config --global http.proxy http://127.0.0.1:8001 git config --global https.proxy https://127.0.0.1:8001将端口修改为自己v2ray的http传入配置","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"proxy","slug":"proxy","permalink":"leouas.top/tags/proxy/"}]},{"title":"将Hexo部署到阿里云轻量服务器(转载)","slug":"geek-oss-hexo","date":"2020-04-26T19:18:31.000Z","updated":"2020-04-26T19:18:31.000Z","comments":false,"path":"geek-oss-hexo/","link":"","permalink":"leouas.top/geek-oss-hexo/","excerpt":"","text":"转载 将Hexo部署到阿里云轻量服务器 原文作者： Huang Jianxian 原文链接： https://hjxlog.com/posts/20191130a1.html 1 前言作为有梦想的，有追求的程序员，有一个自己的个人博客简直就是必须品。你可以选择wordpress这种平台，直接使用，在任何地方只要有网络就能写博客。还可以选择hexo这种静态博客，但是发文章就没有那么随心所欲了，要在你部署的电脑上写才行。 本人之前使用的是hexo+github pages这种方式搭建博客，简单方便，感兴趣的同学可以看我之前写的这篇文章：Hexo+github pages搭建个人独立网站，绑定域名全教程 由于github是在国外的，访问速度确实慢了一些，体验有些不好。正巧上学的时候用学生优惠价格购买了几年阿里云轻量服务器，闲着也是闲着，就用来部署hexo好了，加快访问速度。 因为我是先部署了github pages，所以git安装、NodeJs安装等等都已经实现了，还没安装的有需要可以看我上面那个教程链接。 在部署的过程中，看了网上很多教程，大多是抄来抄去的，看了很多篇照着做也没有成功过，所以这篇博文是综合网上很多篇博文，加上自己的探索写出来的。网上普遍没有贴图片，看着头大，为了照顾纯小白，我这里贴上图片，一步一步来，保姆级教程。 2 环境介绍我本地电脑安装的是win10(64)位。 服务器使用的是阿里云轻量服务器，配置是： 1核、2GB内存，系统盘 40GB SSD云盘 操作系统是CentOS 7.3。 3 本地环境部署这部分在我之前写的Hexo+github pages搭建个人独立网站，绑定域名全教程这里也有，为了方便我直接拿过来这边了。 3.1 安装nodejs因为Hexo需要nodejs环境，因此需要先下载安装Nodejs。点击NodeJs官网，下载最新版本。 下载好一直next，选择一个文件夹位置在一直next即可完成，这个步骤很简单，就不放图了。 3.2 安装git点击git官网，下载安装包。 点击next，选择文件夹位置，然后一直next到底就行了，选择默认配置就好，默认配置会将环境变量配置好的，不需要搞得花里胡哨的。安装好后鼠标右击应该有下图这两个选项了，出现就代表安装成功了。 4 使用Hexo4.1 安装Hexo上面环境搭建好之后，在桌面点击鼠标右键，点击 “Git Bash Here” ，输入以下两条命令。 $ npm install -g hexo-cli 提示：输入的时候不要输入 $ 了，因为命令行本来就已经有了。下载需要几分钟，请耐心等待一下。 可以在复制之后在git窗选择 Shift+Insert 粘贴。有一些警告WARN是不影响使用的，放心。 4.2 初始化Hexo安装好Hexo之后，新建一个文件夹，如 E:\\HEXO ，然后在该文件夹内鼠标右击，选择 “Git Bash Here” ，输入以下命令。 $ hexo init 稍等片刻即可完成，如图： 文件结构如图所示： scaffolds是模版文件夹，当你新建文章时，Hexo 会根据 scaffold 来建立文件。 source文件夹是存放用户资源的地方。 themes是主题文件夹，Hexo 会根据主题来生成静态页面，待会我们会更换成比较流行的nexT主题。 然后再输入命令行进行本地调试，即可看到初始效果啦~ $ hexo s --debug 访问http://localhost:4000/即可看到效果： 4.3 更换主题为NexT上面虽然本地可以调试成功了，但是默认的主题实在不是特别好看。你可以选择去官网选择自己喜欢的主题，官网主题链接https://hexo.io/themes/ 本篇教程选择的是当前流行的NexT主题，这个主题是我感觉用过的最好的一个了。 4.4 下载NexT主题进入刚刚你创建的文件夹的themes里，比如我的 E:\\HEXO\\themes ，鼠标右击选择“Git Bash Here”输入以下两条命令中的一个：（这两个是一样的，只是有同学反应第一条命令不行，第二条就可以。） $ git clone git@github.com:iissnan/hexo-theme-next.git$ git clone https://github.com/iissnan/hexo-theme-next 此时 themes 文件夹便多了一个next主题的文件夹。 4.5 修改配置打开 E:\\HEXO （你的hexo根目录）下的 _config.yml 配置文件 找到下面这段代码 # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: landscape将langscape替换成hexo-theme-next theme: hexo-theme-next 重新在项目根目录下进行本地部署调试 $ hexo s --debug 即可看到效果 5 配置SSH密钥为了使本地可以跟远程的github建立联系，需要在本地配置SSH密钥，这样我们就可以在本地直接提交代码到GitHub上或者远端git仓库。如果你是第一次配置SSH，则配置一下git的username 和 email $ git config --global user.name &quot;你要设置的名字&quot; $ git config --global user.email &quot;你要设置的邮箱&quot; 之后生成SSH密钥： $ ssh-keygen -t rsa -C &quot;你刚刚设置的邮箱&quot; 如果不需要设置密码的话，连续三个回车就好了。在这之后会得到两个文件： id_rsa 和 id_rsa.pub 找到id_rsa.pub文件，用记事本打开，复制其内容。路径： C:\\Users\\J（你的用户名）.ssh 6 服务器部署注意：服务器是 centOS 7.3 阿里云截图如下： 点击右上角的”远程连接”。 输入以下命令，切换到root账号 sudo su root 6.1 git配置1、安装git 在刚刚的黑框里输入，然后回车： `yum install git 等待一下就安装好了。中途会出现 Is this ok [y/d/N]: 输入 ： y 回车即可 此时git已经安装成功。 2、创建git账户 在命令框输入（下面不做重复提示了） adduser git 3、添加git账户权限 chmod 740 /etc/sudoers vim /etc/sudoers 输入上面的命令，回车之后，进入编辑界面。 这里要先点击 “i” 键，进入编辑模式，然后找到一下内容的地方： ## Allow root to run any commands anywhere root ALL=(ALL) ALL 添加以下内容： git ALL=(ALL) ALL 然后按 “Esc” 键，此时最底下的—INSERT—消失，再输入 “:wq”，即保存退出。 4、改回权限 chmod 400 /etc/sudoers 5、设置git账户密码 sudo passwd git 输入两次密码就设置成功了。注意，linux下输入密码是不显示****的，你直接输入，输完回车就行了。 6、切换至git用户，创建 ~/.ssh 文件夹和 ~/.ssh/authorized_keys 文件，并赋予相应的权限 su git mkdir ~/.ssh vim ~/.ssh/authorized_keys按”i”进入编辑模式，将我们在win10中生成的id_rsa.pub文件中的公钥复制到authorized_keys中，按”esc”，然后按”:wq”，保存退出。 接着，输入一下命令，赋予权限 chmod 600 /home/git/.ssh/authorized_keyschmod 700 /home/git/.ssh 在本地Git终端中测试是否能免密登录git，其中SERVER为填写自己的云主机IP，执行输入yes后输入你之前配置的git密码，无报错就说明好了。 在电脑本地桌面，右键”Git Bash Here”，输入一下命令，其中SERVER填写自己的云主机ip，执行输入yes后不用密码说明配置成功了。 ssh -v git@SERVER 如果你之前配置过git，可能你会出现以下这种错误。 可以看到 Offending ECDSA key in /c/Users/jonty/.ssh/known_hosts:2 是.ssh/known_hosts 这个文件第二行出现冲突了。只要用笔记本打开，将这个文件的第二行删掉即可。 重新执行刚刚的命令 ssh -v git@你的服务器ip 这说明已经连接成功了。 6.2 创建仓库目录及相关配置1、创建目录在var目录下创建repo作为Git仓库目录，返回服务端命令行切换到root账户，然后输入： mkdir /var/repo 赋予权限： chown -R git:git /var/repochmod -R 755 /var/repo 接下来创建hexo目录作为网站根目录，并赋予权限： mkdir /var/hexo chown -R git:git /var/hexo chmod -R 755 /var/hexo //接下来创建一个空白的git仓库 cd /var/repo git init --bare hexo.git 创建一个新的 Git 钩子，用于自动部署. 在 /var/repo/hexo.git 下，有一个自动生成的 hooks 文件夹。我们需要在里边新建一个新的钩子文件 post-receive。 vim /var/repo/hexo.git/hooks/post-receive 进入编辑模式，然后将下面那两行代码粘贴进去，保存退出。 #!/bin/bash `git --work-tree=/var/hexo --git-dir=/var/repo/hexo.git checkout -f`修改权限： chown -R git:git /var/repo/hexo.git/hooks/post-receive chmod +x /var/repo/hexo.git/hooks/post-receive 到这里Git仓库已经搭建完毕了。 7 配置Nginx为了部署和维护，我们使用宝塔面板来一键部署Nginx yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh 中途输入”y”回车等待一会就好了。在执行结果最后会出现地址，用户名，密码等。 复制这个地址打开，输入账号密码即可进入宝塔面板。 注意：这里也有可能你进不去面板页面，是因为你的服务器没有开8888这个端口（具体看你的宝塔面板连接的端口），去阿里云轻量服务器控制台中的“安全”-&gt;“防火墙”，右上角的”添加规则”，添加相应的端口即可。看下面的第二张图。 另外如果忘记了宝塔用户名密码，可以去你服务器终端输入： cd /www/server/panel &amp;&amp; python tools.py panel testpasswd 下图为宝塔解决方案，链接忘记Linux 3.X/4.x/5.x/6.x 宝塔面板密码的解决方案 进入面板之后，会提示叫你修改端口，点击”立即修改”,可以看到”面板端口”这时候是8888，自己选一个值，然后先去服务器防火墙上开放这个端口，跟刚刚的”添加规则”操作一样。 再回到宝塔面板页面将”面板端口”的值修改成你刚刚开放的端口值。 然后需要用新端口，重新进入宝塔面板，就是将原有的链接”:”后面的值改成你的端口即可。 在宝塔面板，进入软件商店，输入”Nginx”，然后搜索，安装免费的那个。 等待部署完成。 部署完成之后，点击网站，添加站点，填写你的域名，没有的话写你的服务器ip地址。其他的不要改。 填写完之后提交，然后点击”设置” 点击”配置文件” server { listen 80; # server_name填写你自己的域名，没有的话填ip server_name hjxlog.com; index index.php index.html index.htm default.php default.htm default.html; # 这里root填写自己的网站根目录，修改为/var/hexo root /var/hexo;保存，然后选择“设置”-“网站目录”，将网站目录修改成以下，保存。 /var/hexo 回到服务器终端，重启宝塔服务，使之生效。 service bt restart 8 修改hexo配置进入本地电脑hexo博客的根目录，编辑站点配置文件 _config.yml，找到deploy，修改成以下 deploy: type: git #repo改为repo: git@你的域名:/var/repo/hexo.git repo: git@hjxlog.com:/var/repo/hexo.git branch: master最后在本地电脑hexo博客的根目录右击，Git Bash Here，输入以下命令部署 hexo clean hexo d -g这时候可能出现权限问题，导致部署到git失败。 在服务器终端输入以下命令即可： chown -R git:git /var/repo/ chown -R git:git /var/hexo/最后再hexo d -g部署，应该就可以看到部署成功了。 自此，已经将博客从GitHub pages搬到阿里云服务器了。 9 将网站添加https访问去阿里云申请一个免费的SSL证书，好像要备案，有点忘记了，很快就申请下来了。 进入宝塔面板，”网站”，”设置”，”SSL，”其他证书” 将你申请的证书.key以及.pem内容，粘贴进去然后保存即可。 10 持续更新 2020-03-15 根据评论和邮件反馈遇到的常见问题更新 根据有同学遇到上图这种情况，如果提示 Could not resolve hostname ***.com: Name or service not known Please make sure you have the correct access rights那么看一下自己的域名是否实名验证成功了，如果已验证。可以ping一下域名看能不能ping得通，有可能是你没有把域名解析到服务器ip地址上了。 另外，Mac OS可能在配置方面和Windows不太一样。具体问题要具体分析，具体解决了。 11 总结在部署网站的时候，由于之前对Linux没有经验，网络上看到几篇博客，还是没能部署成功，有些博客比如命令中的单词拼写错误，或者前后不衔接，导致部署一直有问题。 还好在部署的同时去网上学一些Linux基本命令，学到了进入编辑模式，编辑完怎么退出等等。之前看了一篇博客，可能作者默认大家都会了，结果我卡在这里了一下。 总的来说，部署还是比较简单的，第一次没成功的同学不要轻易放弃，多去网上找找答案，努力解决问题，加油！ 如果因为看我的博客，在部署过程当中出现任何问题，请私信我或者邮箱联系我，帮助大家一起解决问题。 本文作者： Huang Jianxian 本文链接： https://hjxlog.com/posts/20191130a1.html 版权声明： 本文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"leouas.top/tags/hexo/"}]},{"title":"Image-Format-Converter","slug":"geek-image-format-converter","date":"2020-04-22T17:35:23.000Z","updated":"2020-04-22T17:35:23.000Z","comments":false,"path":"geek-image-format-converter/","link":"","permalink":"leouas.top/geek-image-format-converter/","excerpt":"","text":"webp2jpg-online-在线图片格式转化器(无需上传)-web2jpg-Online image format converter (no upload required)-web2jpg-オンライン画像形式コンバーター（アップロード不要）-web2jpg-Convertidor de formato de imagen en línea (no requiere carga) var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?3b0931bcaac4aba82e0b86cce3b5033e\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); Format jpeg webp png ico Size x1 x2 x3 x4 x5 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 Quality 1 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 Not Zip + 点击选择/拖放文件（可批量） Click on select/drag file (batch) 一切就绪！Everything's ready!","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"tools","slug":"tools","permalink":"leouas.top/tags/tools/"}]},{"title":"公主连结Re:Dive  可可萝","slug":"mics-GZHJ-ReDive","date":"2020-04-22T15:50:54.000Z","updated":"2020-04-22T15:50:54.000Z","comments":false,"path":"mics-GZHJ-ReDive/","link":"","permalink":"leouas.top/mics-GZHJ-ReDive/","excerpt":"","text":"![](https://cdn.jsdelivr.net/gh/pRzA6/pRzA6/可可萝2020-04-22%20234922.webp)&lt; 可可萝 真的是太可爱了link: CV2859583","categories":[{"name":"mics","slug":"mics","permalink":"leouas.top/categories/mics/"}],"tags":[{"name":"pic","slug":"pic","permalink":"leouas.top/tags/pic/"}]},{"title":"工程力学09-2","slug":"whut-gclx-09-2","date":"2020-04-22T09:51:13.000Z","updated":"2020-04-22T09:51:13.000Z","comments":false,"path":"whut-gclx-09-2/","link":"","permalink":"leouas.top/whut-gclx-09-2/","excerpt":"","text":"工程实例 考试真题 NOTE","categories":[{"name":"whut","slug":"whut","permalink":"leouas.top/categories/whut/"}],"tags":[{"name":"工程力学","slug":"工程力学","permalink":"leouas.top/tags/%E5%B7%A5%E7%A8%8B%E5%8A%9B%E5%AD%A6/"}]},{"title":"Sublime Text - Evernote","slug":"geek-Sublime-Text-Evernote","date":"2020-04-22T08:42:05.000Z","updated":"2020-04-22T08:42:05.000Z","comments":false,"path":"geek-Sublime-Text-Evernote/","link":"","permalink":"leouas.top/geek-Sublime-Text-Evernote/","excerpt":"","text":"sublime text 3Sublime Text - A sophisticated text editor for code, markup and prose package controlctrl + Shift + P sublime-evernoteOAuth 1° 获取 token https://www.evernote.com/api/DeveloperToken.action https://app.yinxiang.com/api/DeveloperToken.action { &quot;noteStoreUrl&quot;: &quot;&quot;, &quot;token&quot;: &quot;&quot; }2° Click Reconfigure Authorization → Enter wiki Home Available Commands Changelog Creating New Notes Creating Note Templates First Use Getting Note Links HTTPS Support Installation Keymaps Metadata Roadmap Settings Styling Supported Markdown","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"sublime text","slug":"sublime-text","permalink":"leouas.top/tags/sublime-text/"}]},{"title":"高分子化学08","slug":"whut-gfzhx-08","date":"2020-04-21T05:43:05.000Z","updated":"2020-04-21T05:43:05.000Z","comments":false,"path":"whut-gfzhx-08/","link":"","permalink":"leouas.top/whut-gfzhx-08/","excerpt":"","text":"","categories":[{"name":"whut","slug":"whut","permalink":"leouas.top/categories/whut/"}],"tags":[{"name":"高分子化学","slug":"高分子化学","permalink":"leouas.top/tags/%E9%AB%98%E5%88%86%E5%AD%90%E5%8C%96%E5%AD%A6/"}]},{"title":"高分子化学09","slug":"whut-gfzhx-09","date":"2020-04-21T05:13:39.000Z","updated":"2020-04-21T05:13:39.000Z","comments":false,"path":"whut-gfzhx-09/","link":"","permalink":"leouas.top/whut-gfzhx-09/","excerpt":"","text":"","categories":[{"name":"whut","slug":"whut","permalink":"leouas.top/categories/whut/"}],"tags":[{"name":"高分子化学","slug":"高分子化学","permalink":"leouas.top/tags/%E9%AB%98%E5%88%86%E5%AD%90%E5%8C%96%E5%AD%A6/"}]},{"title":"JOJO","slug":"share-JOJO","date":"2020-04-18T16:12:53.000Z","updated":"2020-04-18T16:12:53.000Z","comments":true,"path":"share-JOJO/","link":"","permalink":"leouas.top/share-JOJO/","excerpt":"","text":"恍惚间就看完了 有种说不出来什么的感觉 最高に「ハイ！」ってやつだ","categories":[{"name":"share","slug":"share","permalink":"leouas.top/categories/share/"}],"tags":[{"name":"JOJO","slug":"JOJO","permalink":"leouas.top/tags/JOJO/"}]},{"title":"hexo-html-demo","slug":"geek-html-demo","date":"2020-04-13T21:26:22.000Z","updated":"2020-04-13T21:26:22.000Z","comments":true,"path":"geek-html-demo/","link":"","permalink":"leouas.top/geek-html-demo/","excerpt":"","text":"将文章的html 中 header代码贴了过来，作一个小的展示页用 --- title: date: layout: false categories: tags: description: photo: --- &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/xbclub/staticCDN@0.6/css/googlefont.css&quot; media=&quot;all&quot;&gt; &lt;link rel=&quot;stylesheet&quot; id=&quot;saukra_css-css&quot; href=&quot;https://cdn.jsdelivr.net/gh/xbclub/staticCDN@0.6/css/style.css&quot; type=&quot;text/css&quot; media=&quot;all&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/xbclub/staticCDN@0.6/css/lib.min.css&quot; media=&quot;all&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/xbclub/staticCDN@0.6/css/font.css&quot; media=&quot;all&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/xbclub/staticCDN@0.6/css/insight.css&quot; media=&quot;all&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/xbclub/staticCDN@0.6/css/jquery.fancybox.min.css&quot; media=&quot;all&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/xbclub/staticCDN@0.6/css/zoom.css&quot; media=&quot;all&quot;&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/gh/xbclub/staticCDN@0.6/css/sharejs.css&quot;&gt; &lt;script type=&quot;text/javascript&quot;&gt; var bg = &quot;&lt;%= theme.bg%&gt;&quot;.split(&quot;,&quot;); var bgindex = Math.floor(Math.random()*bg.length); if (!!window.ActiveXObject || &quot;ActiveXObject&quot; in window) { //is IE? alert(&#39;朋友，IE浏览器未适配哦~&#39;); } &lt;/script&gt; &lt;style type=&quot;text/css&quot;&gt; .hljs-ln{border-collapse:collapse}.hljs-ln td{padding:0}.hljs-ln-n:before{content:attr(data-line-number)} &lt;/style&gt; &lt;style type=&quot;text/css&quot;&gt;.site-top .lower nav{display:block !important;}.author-profile i,.post-like a,.post-share .show-share,.sub-text,.we-info a,span.sitename,.post-more i:hover,#pagination a:hover,.post-content a:hover,.float-content i:hover{color:#FE9600}.feature i,.download,.navigator i:hover,.links ul li:before,.ar-time i,span.ar-circle,.object,.comment .comment-reply-link,.siren-checkbox-radio:checked + .siren-checkbox-radioInput:after{background:#FE9600}::-webkit-scrollbar-thumb{background:#FE9600}.download,.navigator i:hover,.link-title,.links ul li:hover,#pagination a:hover,.comment-respond input[type=&#39;submit&#39;]:hover{border-color:#FE9600}.entry-content a:hover,.site-info a:hover,.comment h4 a,#comments-navi a.prev,#comments-navi a.next,.comment h4 a:hover,.site-top ul li a:hover,.entry-title a:hover,#archives-temp h3,span.page-numbers.current,.sorry li a:hover,.site-title a:hover,i.iconfont.js-toggle-search.iconsearch:hover,.comment-respond input[type=&#39;submit&#39;]:hover{color:#FE9600}.comments .comments-main{display:block !important;}.comments .comments-hidden{display:none !important;}background-position:center center;background-attachment:inherit;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;header class=&quot;site-header no-select gizle yya sabit&quot; role=&quot;banner&quot;&gt;&lt;div class=&quot;site-top&quot;&gt; &lt;div class=&quot;site-branding&quot;&gt; &lt;span class=&quot;site-title&quot;&gt; &lt;span class=&quot;logolink moe-mashiro&quot;&gt; &lt;a href=&quot;/&quot;&gt; &lt;span class=&quot;sakurasono&quot;&gt;さくら荘その&lt;/span&gt; &lt;span class=&quot;shironeko&quot;&gt;leouas&lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;searchbox search-form-submit&quot;&gt; &lt;i class=&quot;iconfont js-toggle-search iconsearch icon-search&quot;&gt; &lt;/i&gt; &lt;/div&gt; &lt;div id=&quot;show-nav&quot; class=&quot;showNav mobile-fit&quot;&gt; &lt;div class=&quot;line line1&quot;&gt; &lt;/div&gt; &lt;div class=&quot;line line2&quot;&gt; &lt;/div&gt; &lt;div class=&quot;line line3&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;lower-cantiner&quot;&gt; &lt;div class=&quot;lower&quot;&gt; &lt;nav class=&quot;mobile-fit-control hide&quot;&gt; &lt;ul id=&quot;menu-new&quot; class=&quot;menu&quot;&gt;&lt;li&gt; &lt;a href=&quot;/&quot;&gt; &lt;span class=&quot;faa-parent animated-hover&quot;&gt; &lt;i class=&quot;fa fa-fort-awesome faa-shake&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 首页 &lt;/span&gt; &lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href=&quot;javascript:;&quot;&gt; &lt;span class=&quot;faa-parent animated-hover&quot;&gt; &lt;i class=&quot;fa fa-archive faa-shake&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 分类 &lt;/span&gt; &lt;/a&gt;&lt;ul class=&quot;sub-menu&quot;&gt;&lt;li&gt; &lt;a href=&quot;/categories/geek/&quot;&gt; &lt;i class=&quot;fa fa-code&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 技术 &lt;/a&gt; &lt;/li&gt;&lt;li&gt; &lt;a href=&quot;/categories/whut/&quot;&gt; &lt;i class=&quot;fa fa-file-text-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 学习 &lt;/a&gt; &lt;/li&gt;&lt;li&gt; &lt;a href=&quot;/categories/share/&quot;&gt; &lt;i class=&quot;fa fa-commenting-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 随想 &lt;/a&gt; &lt;/li&gt;&lt;li&gt; &lt;a href=&quot;/categories/mics/&quot;&gt; &lt;i class=&quot;fa fa-music&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 媒体 &lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt; &lt;a href=&quot;javascript:;&quot;&gt; &lt;span class=&quot;faa-parent animated-hover&quot;&gt; &lt;i class=&quot;fa fa-list-ul faa-vertical&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 清单 &lt;/span&gt; &lt;/a&gt;&lt;ul class=&quot;sub-menu&quot;&gt;&lt;li&gt; &lt;a href=&quot;/categories/books/&quot;&gt; &lt;i class=&quot;fa fa-th-list faa-bounce&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 书单 &lt;/a&gt; &lt;/li&gt;&lt;li&gt; &lt;a href=&quot;/bangumi/&quot;&gt; &lt;i class=&quot;fa fa-film faa-vertical&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 番组 &lt;/a&gt; &lt;/li&gt;&lt;li&gt; &lt;a href=&quot;/playlist/&quot;&gt; &lt;i class=&quot;fa fa-headphones&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 歌单 &lt;/a&gt; &lt;/li&gt;&lt;li&gt; &lt;a href=&quot;https://huaban.com/sayk/pins/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;i class=&quot;fa fa-photo&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 图集 &lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt; &lt;a href=&quot;/archives&quot;&gt; &lt;span class=&quot;faa-parent animated-hover&quot;&gt; &lt;i class=&quot;fa fa-archive faa-shake&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 归档 &lt;/span&gt; &lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href=&quot;/tags&quot;&gt; &lt;span class=&quot;faa-parent animated-hover&quot;&gt; &lt;i class=&quot;fa fa-tags&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 标签 &lt;/span&gt; &lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href=&quot;/comment/&quot;&gt; &lt;span class=&quot;faa-parent animated-hover&quot;&gt; &lt;i class=&quot;fa fa-pencil-square-o faa-tada&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 留言 &lt;/span&gt; &lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href=&quot;javascript:;&quot;&gt; &lt;span class=&quot;faa-parent animated-hover&quot;&gt; &lt;i class=&quot;fa fa-leaf faa-wrench&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 关于 &lt;/span&gt; &lt;/a&gt;&lt;ul class=&quot;sub-menu&quot;&gt;&lt;li&gt; &lt;a href=&quot;/about/&quot;&gt; &lt;i class=&quot;fa fa-meetup&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 我？ &lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt; &lt;a href=&quot;/links/&quot;&gt; &lt;span class=&quot;faa-parent animated-hover&quot;&gt; &lt;i class=&quot;fa fa-link faa-shake&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 友人帐 &lt;/span&gt; &lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href=&quot;/atom.xml&quot;&gt; &lt;span class=&quot;faa-parent animated-hover&quot;&gt; &lt;i class=&quot;fa fa-rss faa-pulse&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; RSS &lt;/span&gt; &lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;/nav&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/header&gt; &lt;!-- content --&gt; &lt;/body&gt; &lt;/html&gt;","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"leouas.top/tags/hexo/"},{"name":"sakura","slug":"sakura","permalink":"leouas.top/tags/sakura/"}]},{"title":"CODMW-Soap-Ghost","slug":"mics-3D-CSS","date":"2020-04-13T20:51:00.000Z","updated":"2020-04-13T20:51:00.000Z","comments":true,"path":"mics-3D-CSS/","link":"","permalink":"leouas.top/mics-3D-CSS/","excerpt":"","text":"var bg = \"\".split(\",\"); var bgindex = Math.floor(Math.random()*bg.length); if (!!window.ActiveXObject || \"ActiveXObject\" in window) { //is IE? alert('朋友，IE浏览器未适配哦~'); } .hljs-ln{border-collapse:collapse}.hljs-ln td{padding:0}.hljs-ln-n:before{content:attr(data-line-number)} .site-top .lower nav{display:block !important;}.author-profile i,.post-like a,.post-share .show-share,.sub-text,.we-info a,span.sitename,.post-more i:hover,#pagination a:hover,.post-content a:hover,.float-content i:hover{color:#FE9600}.feature i,.download,.navigator i:hover,.links ul li:before,.ar-time i,span.ar-circle,.object,.comment .comment-reply-link,.siren-checkbox-radio:checked + .siren-checkbox-radioInput:after{background:#FE9600}::-webkit-scrollbar-thumb{background:#FE9600}.download,.navigator i:hover,.link-title,.links ul li:hover,#pagination a:hover,.comment-respond input[type='submit']:hover{border-color:#FE9600}.entry-content a:hover,.site-info a:hover,.comment h4 a,#comments-navi a.prev,#comments-navi a.next,.comment h4 a:hover,.site-top ul li a:hover,.entry-title a:hover,#archives-temp h3,span.page-numbers.current,.sorry li a:hover,.site-title a:hover,i.iconfont.js-toggle-search.iconsearch:hover,.comment-respond input[type='submit']:hover{color:#FE9600}.comments .comments-main{display:block !important;}.comments .comments-hidden{display:none !important;}background-position:center center;background-attachment:inherit;} さくら荘その leouas 首页 分类 技术 学习 随想 媒体 清单 书单 番组 歌单 图集 归档 标签 留言 关于 我？ 友人帐 RSS","categories":[{"name":"mics","slug":"mics","permalink":"leouas.top/categories/mics/"}],"tags":[{"name":"pic","slug":"pic","permalink":"leouas.top/tags/pic/"}]},{"title":"Call-of-Duty-WM","slug":"mics-COD-mw2","date":"2020-04-13T18:26:00.000Z","updated":"2020-04-13T18:26:00.000Z","comments":true,"path":"mics-COD-mw2/","link":"","permalink":"leouas.top/mics-COD-mw2/","excerpt":"","text":"This is a recording. History is written by the victors. History is full of lies. If he is alive and we are dead words, his truth will be recorded. And we will be erased. Shepherd will be a hero. Because you want to change the world did was a good lies and rivers of blood. He will soon complete history of the great lies. He’s the truth will be the truth. But only when he live down, and we die. Ordinary people don’t wake up in the morning thought this is the last day of life. But I think this is a luxury, rather than curse. Know yourself numbered is a relief. The liquidation over. No weapon. With a pair of hundreds. By hot heads to carry out a suicide mission. But here’s the sandstorm and rock has been the thousands of years of war defiled. We will therefore be remembered. For in our endless nightmare, it is our own choose to enter. We will be like the mind jumps out of lava general forward. We had our hearts, the clear goal: we, and killed him.","categories":[{"name":"mics","slug":"mics","permalink":"leouas.top/categories/mics/"}],"tags":[{"name":"pic","slug":"pic","permalink":"leouas.top/tags/pic/"}]},{"title":"工程力学08 习题课","slug":"whut-gclx-08-1","date":"2020-04-13T11:58:33.000Z","updated":"2020-04-13T11:58:33.000Z","comments":false,"path":"whut-gclx-08-1/","link":"","permalink":"leouas.top/whut-gclx-08-1/","excerpt":"","text":"工程力学08 习题课 截了绝大多数的PPT，不过顺序没有调整OneDrive 直链","categories":[{"name":"whut","slug":"whut","permalink":"leouas.top/categories/whut/"}],"tags":[{"name":"工程力学","slug":"工程力学","permalink":"leouas.top/tags/%E5%B7%A5%E7%A8%8B%E5%8A%9B%E5%AD%A6/"}]},{"title":"印象笔记“图床”","slug":"geek-印象笔记图床","date":"2020-04-13T11:43:32.000Z","updated":"2020-04-13T11:43:32.000Z","comments":true,"path":"geek-印象笔记图床/","link":"","permalink":"leouas.top/geek-%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%9B%BE%E5%BA%8A/","excerpt":"","text":"1-分享笔记 2-获取链接 3-定位并删除无关元素浏览器中右键检查元素，删除印象笔记广告 4-复制html 0-web上插入印象笔记中的图片&lt;img ext=&quot;png&quot; src=&quot;https://app.yinxiang.com/ FileSharing.action?hash=1/13f74f2225c01d1a6cb1ed30e860a129-215002&quot;&gt;","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"图床","slug":"图床","permalink":"leouas.top/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"ScreenRecording","slug":"whut-Screen-Recording","date":"2020-03-17T09:01:27.000Z","updated":"2020-03-17T09:01:27.000Z","comments":true,"path":"whut-Screen-Recording/","link":"","permalink":"leouas.top/whut-Screen-Recording/","excerpt":"","text":"网盘账号账号： gfzwl123@2go-mail.com gfzhx123@2go-mail.com gclx123@2go-mail.com rzsx@mailsecv.com 密码：123456789奶牛快传 → Cowtransfer.com","categories":[{"name":"whut","slug":"whut","permalink":"leouas.top/categories/whut/"}],"tags":[],"author":"Leouas"},{"title":"Minecraft","slug":"mics-Minecraft","date":"2020-03-15T03:46:08.000Z","updated":"2020-03-15T03:46:08.000Z","comments":true,"path":"mics-Minecraft/","link":"","permalink":"leouas.top/mics-Minecraft/","excerpt":"","text":"Minecraft - Volume Alpha(游戏《我的世界》原声带 第1卷) Living Mice","categories":[{"name":"mics","slug":"mics","permalink":"leouas.top/categories/mics/"}],"tags":[]},{"title":"manual","slug":"share-sjtu","date":"2020-03-14T10:14:28.000Z","updated":"2020-03-14T10:14:28.000Z","comments":true,"path":"share-sjtu/","link":"","permalink":"leouas.top/share-sjtu/","excerpt":"","text":"相比宝贵的青春,我们在上学期间所需要的学费和生活开销几乎可以忽略不计。我们真正投下的有价值的筹码,是时间。 面对着足以改变你人生轨迹的黄金时间,你是否感到了它的沉重? 你又是否想过要如何计划这笔巨额投资? 如果你是一名乖孩子,每天从早晨开始好好上课,好好做作业,好好预习、复习,直到熄灯时间好好睡觉,过着这种积极健康,平稳中庸的生活,但是缺乏有效自我支配的生活(如果按照学校的规划,你会发现你可以自由支配的业余时间少得可怜)。那么,你这样退守下去,无异于把自己的青春放在保险箱里让他随着时间而凋谢。 我们必须牢记这样的黄金规则:平庸的生活方式是麻醉药。他只会束缚你,让你没有作为,甚至没有出息地度过大学的四年。 原文链接 下载链接","categories":[{"name":"share","slug":"share","permalink":"leouas.top/categories/share/"}],"tags":[]},{"title":"Yellow","slug":"mics-yellow","date":"2020-03-13T07:03:35.000Z","updated":"2020-03-13T07:03:35.000Z","comments":true,"path":"mics-yellow/","link":"","permalink":"leouas.top/mics-yellow/","excerpt":"","text":"av35277328","categories":[{"name":"mics","slug":"mics","permalink":"leouas.top/categories/mics/"}],"tags":[]},{"title":"Book-list","slug":"book-book-list","date":"2020-03-12T18:35:47.000Z","updated":"2020-03-12T18:35:47.000Z","comments":true,"path":"book-book-list/","link":"","permalink":"leouas.top/book-book-list/","excerpt":"","text":"","categories":[{"name":"books","slug":"books","permalink":"leouas.top/categories/books/"}],"tags":[]},{"title":"General Criteria in Writing","slug":"whut-Criteria-In-Writing","date":"2020-03-03T02:01:46.000Z","updated":"2020-03-03T02:01:46.000Z","comments":true,"path":"whut-Criteria-In-Writing/","link":"","permalink":"leouas.top/whut-Criteria-In-Writing/","excerpt":"","text":"1. Completeness Completeness in contents and expression Decent opening，closing，and main body in a formal essay or speech script 2. Coherence Logic,natural transition An overall design 3. Accuracy Correct spelling, grammar, vocabulary, typing, punctuation,etc. 4. Vividness Advanced, idiomatic words Innovative ideas Succinctness","categories":[{"name":"whut","slug":"whut","permalink":"leouas.top/categories/whut/"}],"tags":[{"name":"English","slug":"English","permalink":"leouas.top/tags/English/"}]},{"title":"Maverick 使用","slug":"share-Maverick","date":"2020-02-25T01:01:02.000Z","updated":"2020-02-25T01:01:02.000Z","comments":true,"path":"share-Maverick/","link":"","permalink":"leouas.top/share-Maverick/","excerpt":"","text":"我现在使用Hexo生成静态网站，再部署到Github。在本地写好markdown，然后用hexo来渲染网页。Maverick则省去了在本地 hexo generate &amp;&amp; hexo deploy。每次改动会触发Github Action，进而通过Workflow自动完成更新部署 。于是可以在任何设备上仅在Github一个网站上完成博客的写作与发布。 Maverick项目地址：GitHub - AlanDecode/Maverick: 🏄‍ A static blog generator built with Python. Maverick介绍：Maverick - Go My Own Way. - 无文字 | 三无计划 博客教程原文：完全使用 GitHub 写博客 - 无文字 | 三无计划 流程很简单，我跟着做了一下 Gyanle Yao ，Github访问速度不是很友好，我想 git clone ，不过一直没有clone下来 - - 3kb/s 感觉还是hexo 更熟悉，刚了解主题结构，自己能做的事情也更多。https://leouas.top/bthl/拿来做menu中的一项是蛮不错的，我打算用来放一些学习笔记类的文章。","categories":[{"name":"share","slug":"share","permalink":"leouas.top/categories/share/"}],"tags":[{"name":"blog","slug":"blog","permalink":"leouas.top/tags/blog/"}]},{"title":"git clone 提速","slug":"geek-github-clone-提速","date":"2020-02-22T08:18:10.000Z","updated":"2020-02-22T08:18:10.000Z","comments":true,"path":"geek-github-clone-提速/","link":"","permalink":"leouas.top/geek-github-clone-%E6%8F%90%E9%80%9F/","excerpt":"","text":"国内正常情况下git clone的速度非常慢，其实并不是因为 http://github.com 的这个域名被限制了，而是http://github.global.ssl.fastly.Net 在hosts中映射解决 获取网址ip[The Best IP Address, Email and Networking Tools - IPAddress.com](https://www.ipaddress.com/ “https://www.ipaddress.com/“) 添加映射路径C:\\Windows\\System32\\drivers\\etc 添加映射 ip地址+空格+域名 199.232.5.194 http://github.global.ssl.fastly.Net 当前这种方式已经没有什么效果了最好的解决方法是使用码云 gitee 导入 github 仓库，之后在 gitee 上面克隆仓库","categories":[],"tags":[{"name":"github","slug":"github","permalink":"leouas.top/tags/github/"}]},{"title":"hexo new pages 后自动用编辑器打开文档","slug":"geek-hexo-脚本","date":"2020-02-22T07:15:53.000Z","updated":"2020-02-22T07:15:53.000Z","comments":true,"path":"geek-hexo-脚本/","link":"","permalink":"leouas.top/geek-hexo-%E8%84%9A%E6%9C%AC/","excerpt":"","text":"在博客根目录中新建scripts文件夹，然后新建 .js文件，加入以下内容 编辑器 如下面的 ‘Mark Text’，需要配置好环境变量 let spawn = require(&#39;hexo-util/lib/spawn&#39;); hexo.on(&#39;new&#39;||&#39;n&#39;, (data) =&gt; { spawn(&#39;Mark Text&#39;, [hexo.base_dir, data.path]); });","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"leouas.top/tags/hexo/"}]},{"title":"heox 博客多设备同步管理","slug":"geek-hexo-branch-github","date":"2020-02-19T18:29:08.000Z","updated":"2020-02-19T18:29:08.000Z","comments":true,"path":"geek-hexo-branch-github/","link":"","permalink":"leouas.top/geek-hexo-branch-github/","excerpt":"","text":"之前一直没想好个人博客文件怎么存放？ 想要在不同设备上更新博客 想要更换电脑时非常方便的迁移博客文件 想要博客文件被妥善保管以防本地文件丢失时及时止损 想要实现这三点，搜寻一番后发现在托管静态博客文件的repo创建一个新分支，然后将本地文件提交到新分支就能很好的实现上面三点。 1. 设置 .gitignore在博客根目录/hexo中创建.gitnore文件 .deploy*/ public/ node_modules/ *.log db.json2. 创建本地分支，并推送至远端git checkout -b hexo git checkout -b hexo 等价于git branch hexo (创建hexo分支) +git checkout hexo（切换到hexo分支） git branch(查看当前分支) git push origin hexo 将新分支推送至GitHub 3. 编写shell脚本，快捷更新文件新建update.sh git add . &amp;&amp; git commit -m &quot;update&quot; &amp;&amp; git push origin hexo notes:-git push origin: hexo 删除hexo远程分支 -git branch -r查看远程分支 -git branch -a 查看所有分支 提交时注意： 将themes目录以内中的主题的.git目录删除，因为一个git仓库中不能包含另一个git仓库，否则提交主题文件夹会失败 后期需要更新主题时在另一个地方git clone下来该主题的最新版本，然后将内容拷到当前主题目录即可 另注： git push origin :hexo可删除清空远程hexo分支 git branch -r查看远程分支 git branch -a查看所有分支","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"github","slug":"github","permalink":"leouas.top/tags/github/"},{"name":"hexo","slug":"hexo","permalink":"leouas.top/tags/hexo/"}]},{"title":"Github 反应速度慢以及图片加载错误问题","slug":"issues-Github-反问速度慢以及图片加载错误问题","date":"2020-02-19T11:12:11.000Z","updated":"2020-02-19T11:12:11.000Z","comments":true,"path":"issues-Github-反问速度慢以及图片加载错误问题/","link":"","permalink":"leouas.top/issues-Github-%E5%8F%8D%E9%97%AE%E9%80%9F%E5%BA%A6%E6%85%A2%E4%BB%A5%E5%8F%8A%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E9%94%99%E8%AF%AF%E9%97%AE%E9%A2%98/","excerpt":"","text":"获取URL F12开发者选项 -&gt; 右击加载失败图片 -&gt; 检查 -&gt; 定位到图片地址src=”https://avatars2.githubusercontent.com/u/35817305?s=40&amp;v=4&quot; 获取IPhttps://www.ipaddress.com/ 修改host文件路径C:\\Windows\\System32\\drivers\\etc添加映射 ip地址+空格+域名 其中,下面两个映射是固定的192.30.253.112 github.com192.30.253.119 gist.github.com 下面这些映射中的ip199.232.28.133是在 ipaddress 获取的199.232.28.133 assets-cdn.github.com199.232.28.133 raw.githubusercontent.com199.232.28.133 gist.githubusercontent.com199.232.28.133 cloud.githubusercontent.com199.232.28.133 camo.githubusercontent.com199.232.28.133 avatars0.githubusercontent.com199.232.28.133 avatars1.githubusercontent.com199.232.28.133 avatars2.githubusercontent.com199.232.28.133 avatars3.githubusercontent.com199.232.28.133 avatars4.githubusercontent.com199.232.28.133 avatars5.githubusercontent.com199.232.28.133 avatars6.githubusercontent.com199.232.28.133 avatars7.githubusercontent.com199.232.28.133 avatars8.githubusercontent.com","categories":[],"tags":[{"name":"github","slug":"github","permalink":"leouas.top/tags/github/"}]},{"title":"hexo per page","slug":"geek-hexo-archive-perpage","date":"2020-02-16T21:12:25.000Z","updated":"2020-02-16T21:12:25.000Z","comments":true,"path":"geek-hexo-archive-perpage/","link":"","permalink":"leouas.top/geek-hexo-archive-perpage/","excerpt":"[转载]Hexo程序archive页面数量设置原文链接 2015-11-21 | 分类于业余爱好 使用Hexo搭建博客已经有一段时间了，当文章数量达到十几篇左右时，突然发觉archive归档页面仅显示10篇文章，并且出现了分页功能，对于我们这种个人博客，文章数量不会很多，所以更希望是在一页中完全展示出来，便于访问者查找感兴趣的文章。 在网上查找原因，发现此处的10条限制来自_config.yml文件中的配置，这个配置控制所有的分页配置，包括首页、归档页、tag分类页面。 per_page: 10 如果我们想对上面三个页面做独立的配置，需要安装插件进行功能支持。 hexo-generator-index hexo-generator-archive hexo-generator-tag 使用如下命令进行安装需要的插件","text":"[转载]Hexo程序archive页面数量设置原文链接 2015-11-21 | 分类于业余爱好 使用Hexo搭建博客已经有一段时间了，当文章数量达到十几篇左右时，突然发觉archive归档页面仅显示10篇文章，并且出现了分页功能，对于我们这种个人博客，文章数量不会很多，所以更希望是在一页中完全展示出来，便于访问者查找感兴趣的文章。 在网上查找原因，发现此处的10条限制来自_config.yml文件中的配置，这个配置控制所有的分页配置，包括首页、归档页、tag分类页面。 per_page: 10 如果我们想对上面三个页面做独立的配置，需要安装插件进行功能支持。 hexo-generator-index hexo-generator-archive hexo-generator-tag 使用如下命令进行安装需要的插件 $ npm install hexo-generator-archive --save 对应的_config.yml文件中添加如下配置 index_generator: per_page: 5 archive_generator: per_page: 20 //为0时表示不分页全展示 yearly: true //按年生成归档 monthly: true //按月生成归档 tag_generator: per_page: 10 注意:上面归档设置中的按年或者按月，需要修改模板给出对应的链接入口，对于没有兴趣修改模板的同学，可以将此处设为false，减少生成页面时的工作量。 参考网站：https://github.com/hexojs/hexo-generator-archivehttps://github.com/iissnan/hexo-theme-next/issues/30 Hexoarchive","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"leouas.top/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"leouas.top/tags/blog/"}]},{"title":"Windows Terminal 美化","slug":"geek-WindowsTerminal美化","date":"2020-02-16T11:12:45.000Z","updated":"2020-02-16T11:12:45.000Z","comments":true,"path":"geek-WindowsTerminal美化/","link":"","permalink":"leouas.top/geek-WindowsTerminal%E7%BE%8E%E5%8C%96/","excerpt":"安装PowerLine先安装oh-my-posh 为当前用户安装 Install-Module posh-git -Scope CurrentUser Install-Module oh-my-posh -Scope CurrentUser 为所有用户安装 用管理员权限打开PowerShell Install-Module posh-git Install-Module oh-my-posh 安装完成后输入 Import-Module posh-git Import-Module oh-my-posh Set-Theme PowerLine","text":"安装PowerLine先安装oh-my-posh 为当前用户安装 Install-Module posh-git -Scope CurrentUser Install-Module oh-my-posh -Scope CurrentUser 为所有用户安装 用管理员权限打开PowerShell Install-Module posh-git Install-Module oh-my-posh 安装完成后输入 Import-Module posh-git Import-Module oh-my-posh Set-Theme PowerLine 打开~\\Documents\\WindowsPowerShell，新建文本文档，叫Microsoft.PowerShell_profile.ps1输入 Import-Module posh-git Import-Module oh-my-posh Set-Theme PowerLine修改配置文件Windows Terminal的配置文件储存在~\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\RoamingState\\profiles.json 一种配置{ &quot;globals&quot;: { &quot;alwaysShowTabs&quot;: true, &quot;defaultProfile&quot;: &quot;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&quot;, &quot;initialCols&quot;: 120, &quot;initialRows&quot;: 40, &quot;keybindings&quot;: [ { &quot;command&quot;: &quot;closeTab&quot;, &quot;keys&quot;: [ &quot;ctrl+w&quot; ] } ], &quot;requestedTheme&quot;: &quot;system&quot;, &quot;showTabsInTitlebar&quot;: true, &quot;showTerminalTitleInTitlebar&quot;: true }, &quot;profiles&quot;: [ { &quot;acrylicOpacity&quot;: 0.75, &quot;closeOnExit&quot;: true, &quot;colorScheme&quot;: &quot;Campbell&quot;, &quot;commandline&quot;: &quot;powershell.exe&quot;, &quot;cursorColor&quot;: &quot;#FFFFFF&quot;, &quot;cursorShape&quot;: &quot;bar&quot;, &quot;fontFace&quot;: &quot;Hack&quot;, &quot;fontSize&quot;: 14, &quot;guid&quot;: &quot;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&quot;, &quot;historySize&quot;: 9001, &quot;icon&quot;: &quot;ms-appx:///ProfileIcons/{61c54bbd-c2c6-5271-96e7-009a87ff44bf}.png&quot;, &quot;name&quot;: &quot;Windows PowerShell&quot;, &quot;padding&quot;: &quot;0, 0, 0, 0&quot;, &quot;snapOnInput&quot;: true, &quot;startingDirectory&quot;: &quot;%Workspaces%&quot;, &quot;useAcrylic&quot;: true } ], &quot;schemes&quot;: [ { &quot;background&quot;: &quot;#0C0C0C&quot;, &quot;black&quot;: &quot;#0C0C0C&quot;, &quot;blue&quot;: &quot;#0037DA&quot;, &quot;brightBlack&quot;: &quot;#767676&quot;, &quot;brightBlue&quot;: &quot;#3B78FF&quot;, &quot;brightCyan&quot;: &quot;#61D6D6&quot;, &quot;brightGreen&quot;: &quot;#16C60C&quot;, &quot;brightPurple&quot;: &quot;#B4009E&quot;, &quot;brightRed&quot;: &quot;#E74856&quot;, &quot;brightWhite&quot;: &quot;#F2F2F2&quot;, &quot;brightYellow&quot;: &quot;#F9F1A5&quot;, &quot;cyan&quot;: &quot;#3A96DD&quot;, &quot;foreground&quot;: &quot;#CCCCCC&quot;, &quot;green&quot;: &quot;#13A10E&quot;, &quot;name&quot;: &quot;Campbell&quot;, &quot;purple&quot;: &quot;#881798&quot;, &quot;red&quot;: &quot;#C50F1F&quot;, &quot;white&quot;: &quot;#CCCCCC&quot;, &quot;yellow&quot;: &quot;#C19C00&quot; } ] }","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"terminal","slug":"terminal","permalink":"leouas.top/tags/terminal/"},{"name":"Windows","slug":"Windows","permalink":"leouas.top/tags/Windows/"}]},{"title":"Ubunti-Screenshot","slug":"geek-UbuntuScreenshot","date":"2020-02-16T06:36:55.000Z","updated":"2020-02-16T06:36:55.000Z","comments":true,"path":"geek-UbuntuScreenshot/","link":"","permalink":"leouas.top/geek-UbuntuScreenshot/","excerpt":"","text":"PrtSc – 获取整个屏幕的截图并保存到 Pictures 目录。 Shift + PrtSc – 获取屏幕的某个区域截图并保存到 Pictures 目录。 Alt + PrtSc –获取当前窗口的截图并保存到 Pictures 目录。 Ctrl + PrtSc – 获取整个屏幕的截图并存放到剪贴板。 Shift + Ctrl + PrtSc – 获取屏幕的某个区域截图并存放到剪贴板。 Ctrl + Alt + PrtSc – 获取当前窗口的 截图并存放到剪贴板。","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"leouas.top/tags/Linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"leouas.top/tags/Ubuntu/"}]},{"title":"右键快捷菜单添加Terminal","slug":"geek-右键快捷菜单添加Terminal","date":"2020-02-16T06:15:39.000Z","updated":"2020-02-16T06:15:39.000Z","comments":true,"path":"geek-右键快捷菜单添加Terminal/","link":"","permalink":"leouas.top/geek-%E5%8F%B3%E9%94%AE%E5%BF%AB%E6%8D%B7%E8%8F%9C%E5%8D%95%E6%B7%BB%E5%8A%A0Terminal/","excerpt":"","text":"@echo off reg.exe add &quot;HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\wt&quot; /f /ve /d &quot;Windows Terminal here&quot; reg.exe add &quot;HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\wt&quot; /f /v &quot;Icon&quot; /t REG_EXPAND_SZ /d &quot;C:\\Users\\Leoua\\AppData\\Local\\terminal\\terminal.ico&quot; reg.exe add &quot;HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\wt\\command&quot; /f /ve /t REG_EXPAND_SZ /d &quot;\\&quot;%%LOCALAPPDATA%%\\Microsoft\\WindowsApps\\wt.exe\\&quot;&quot; pause ico图标 另外，还需要设置一下 profiles.json 里对应 profile 的 startingDiretory 字段： &quot;startingDiretory&quot; : &quot;.&quot;已知问题：这样设置的话，如果不通过右键菜单直接启动 Windows Terminal，工作目录会变为 /mnt/c/Windows/System32。这是一个 BUG，且截至本文发布时仍未修复。WT 的命令行参数目前还很不完善，期待后续更新吧。 参照 https://www.jianshu.com/p/31bf9f9c0fb1","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"terminal","slug":"terminal","permalink":"leouas.top/tags/terminal/"},{"name":"Windows","slug":"Windows","permalink":"leouas.top/tags/Windows/"}]},{"title":"hexo 迁移至windows","slug":"geek-hexo-move-to-windows","date":"2020-02-16T05:13:12.000Z","updated":"2020-02-16T05:13:12.000Z","comments":true,"path":"geek-hexo-move-to-windows/","link":"","permalink":"leouas.top/geek-hexo-move-to-windows/","excerpt":"复制hexo部分文件夹 hexo source themes _config.yml package 安装 git-for-windows node.js hexo $ npm install hexo-cli -g #使用全局设置下载、安装hexo至默认的文件夹 $ hexo init xxxx $ cd xxxx $ npm install $ hexo server","text":"复制hexo部分文件夹 hexo source themes _config.yml package 安装 git-for-windows node.js hexo $ npm install hexo-cli -g #使用全局设置下载、安装hexo至默认的文件夹 $ hexo init xxxx $ cd xxxx $ npm install $ hexo server git bash配置身份信息 并配置git deploy$ git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot; 配置SSH deploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master安装所需插件 $ npm install hexo-deployer-git --save $ hexo deploy","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"leouas.top/tags/Windows/"}]},{"title":"nginx配置ssl证书","slug":"geek-nginx配置SSL证书","date":"2020-02-15T14:27:06.000Z","updated":"2020-02-15T14:27:06.000Z","comments":true,"path":"geek-nginx配置SSL证书/","link":"","permalink":"leouas.top/geek-nginx%E9%85%8D%E7%BD%AESSL%E8%AF%81%E4%B9%A6/","excerpt":"nginx完全卸载 先停止nginx进程 sudo kill 端口号，如果杀不死该进程 使用 sudo kill -9 端口号 sudo apt-get remove nginx sudo rm -rf /etc/nginx dpkg -l|grep nginx sudo apt remove nginx-commen sudo apkg --purge nginx-common 重装nginxsudo apt install nginx参照wendj/Nginx使用与完全卸载","text":"nginx完全卸载 先停止nginx进程 sudo kill 端口号，如果杀不死该进程 使用 sudo kill -9 端口号 sudo apt-get remove nginx sudo rm -rf /etc/nginx dpkg -l|grep nginx sudo apt remove nginx-commen sudo apkg --purge nginx-common 重装nginxsudo apt install nginx参照wendj/Nginx使用与完全卸载 配置SSL获取SSl证书，并下载提取得到 .pem 和 .key 两个文件 $ cd /etc/nginx $ mkdir cert $ cp SSL证书绝对路径 /etc/nginx/cert修改 /etc/nginx/ 中 nginx.conf server配置 $ sudo vim /etc/nginx/nginx.confserver { listen 443 ssl; server_name leouas.top; ssl_certificate /etc/nginx/cert/leouas.top.pem; ssl_certificate_key /etc/nginx/cert/leouas.top.key; ssl_prefer_server_ciphers on; location / { root /hexo/public; index index.html index; } ... }重启nginx $ nginx -s reload","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"leouas.top/tags/Linux/"},{"name":"hexo","slug":"hexo","permalink":"leouas.top/tags/hexo/"},{"name":"ssl","slug":"ssl","permalink":"leouas.top/tags/ssl/"},{"name":"nginx","slug":"nginx","permalink":"leouas.top/tags/nginx/"}]},{"title":"窗口管理器","slug":"geek-Ubuntu-窗口管理器","date":"2020-02-14T18:35:08.000Z","updated":"2020-02-14T18:35:08.000Z","comments":true,"path":"geek-Ubuntu-窗口管理器/","link":"","permalink":"leouas.top/geek-Ubuntu-%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86%E5%99%A8/","excerpt":"","text":"i3bspwmawesomeSwayhttps://swaywm.org/ linkHowtoing.com","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"leouas.top/tags/Linux/"}]},{"title":"vimrc","slug":"geek-vimrc-setting","date":"2020-02-14T18:13:08.000Z","updated":"2020-02-14T18:13:08.000Z","comments":true,"path":"geek-vimrc-setting/","link":"","permalink":"leouas.top/geek-vimrc-setting/","excerpt":"","text":"vim设置支持鼠标光标定位,滚轮翻动页面set mouse=a","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"vim","slug":"vim","permalink":"leouas.top/tags/vim/"}]},{"title":"AHK-一个热键实现多种按键映射","slug":"geek-ahk-ahk01-多按键映射","date":"2020-02-14T17:20:23.000Z","updated":"2020-02-14T17:20:23.000Z","comments":true,"path":"geek-ahk-ahk01-多按键映射/","link":"","permalink":"leouas.top/geek-ahk-ahk01-%E5%A4%9A%E6%8C%89%E9%94%AE%E6%98%A0%E5%B0%84/","excerpt":"Virtual Desktop Switchinge.g.第一次按ScrollLock向右切换虚拟桌面第二次按ScrollLock向左切换虚拟桌面 【HotKey】:: toggle := !toggle if(toggle) send ^#{Right} else send ^#{Left} return If you want to toggle with more then two [Keyboard Shortcuts] toggle’s这是另外一种可爱的做法","text":"Virtual Desktop Switchinge.g.第一次按ScrollLock向右切换虚拟桌面第二次按ScrollLock向左切换虚拟桌面 【HotKey】:: toggle := !toggle if(toggle) send ^#{Right} else send ^#{Left} return If you want to toggle with more then two [Keyboard Shortcuts] toggle’s这是另外一种可爱的做法 ; [+ = Shift] [! = Alt] [^ = Ctrl] [# = Win] #SingleInstance ignore a := 1 ; If you want to toggle with more the two toggle&#39;s you can use this code. ;a = 1 =&gt; send {^#Right} ;a = 2 =&gt; send {^#Left} ;a = 3 =&gt; send {????} ;click the f1 key to toggle f1:: if (a=1) { Menu, Tray, Icon,c:\\icons\\32x32\\icon1.ico,1,1 ; change tray icon send {^#Right} a := 2 }else{ if (a=2) { Menu, Tray, Icon,c:\\icons\\32x32\\icon2.ico,1,1 ; change tray icon send {^#Left} a := 3 }else{ if (a=3) { Menu, Tray, Icon,c:\\icons\\32x32\\icon3.ico,1,1 ; change tray icon ;send {????} a := 1 }}} return esc::exitapp 参照Toggle between keyboard shortcuts with AutoHotKey","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"ahk","slug":"ahk","permalink":"leouas.top/tags/ahk/"}]},{"title":"使用7牛云作为图床","slug":"geek-hexo-blog-7niuyun-Sync","date":"2020-02-14T15:41:35.000Z","updated":"2020-02-14T15:41:35.000Z","comments":true,"path":"geek-hexo-blog-7niuyun-Sync/","link":"","permalink":"leouas.top/geek-hexo-blog-7niuyun-Sync/","excerpt":"在7牛云上注册并实名认证7牛云官网打开&gt;管理控制台&gt;对象储存&gt;空间管理&gt;空间设置&gt;访问控制&gt;设为公开空间在&gt;文件管理可以看到自己的 外链域名 使用hexo-qiniu-synchttps://github.com/gyk001/hexo-qiniu-sync 在博客根目录安装插件 $ cd hexo $ npm install hexo-qiniu-sync --save","text":"在7牛云上注册并实名认证7牛云官网打开&gt;管理控制台&gt;对象储存&gt;空间管理&gt;空间设置&gt;访问控制&gt;设为公开空间在&gt;文件管理可以看到自己的 外链域名 使用hexo-qiniu-synchttps://github.com/gyk001/hexo-qiniu-sync 在博客根目录安装插件 $ cd hexo $ npm install hexo-qiniu-sync --save #七牛云存储设置 qiniu: offline: false sync: true bucket: 外链域名 # secret_file: sec/qn.json or C: access_key: 右上&gt;秘钥管理中查看 secret_key: 同上 dirPrefix: static urlPrefix: 外链域名/static up_host: http://upload.qiniu.com local_dir: static update_exist: true image: folder: images extend: js: folder: js css: folder: css/hexo/static/ 文件夹下的文件在使用 hexo s 或 hexo g 或 hexo d 时被自动同步到7牛云或者 hexo qiniu sync图片标签 {% qnimg imageFile attr1:value1 attr2:value2 'attr3:value31 value32 value3n' [extend:?imageView2/2/w/600 | normal:yes] %} {% qnjs jsFile attr1:value1 attr2:value2 'attr3:value31 value32 value3n' %} {% qncss cssFile attr1:value1 attr2:value2 'attr3:value31 value32 value3n' %}一般的 {% qnimg name.XXX %}","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"leouas.top/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"leouas.top/tags/blog/"}]},{"title":"ubuntu-themes","slug":"geek-ubuntu-themes-美化","date":"2020-02-14T13:05:19.000Z","updated":"2020-02-14T13:05:19.000Z","comments":true,"path":"geek-ubuntu-themes-美化/","link":"","permalink":"leouas.top/geek-ubuntu-themes-%E7%BE%8E%E5%8C%96/","excerpt":"仿Mac主题安装必要工具安装配置gnome $ sudo apt update $ sudo apt install gnome-tweaks $ sudo apt install chrome-gnome-shellinstall gnome extensions extension.gnome.org User Themes","text":"仿Mac主题安装必要工具安装配置gnome $ sudo apt update $ sudo apt install gnome-tweaks $ sudo apt install chrome-gnome-shellinstall gnome extensions extension.gnome.org User Themes Cupertino iCons Collection OSX El Capitan Shell UI blyr Dahs-to-dock $ gsettings set org.gnome.shell.extensions.dash-to-dock show-apps-at-top true $ gsettings set org.gnome.shell.extensions.dash-to-dock custom-theme-running-dots false $ gsettings set org.gnome.shell.extensions.dash-to-dock custom-theme-customize-running-dots false $ gsettings set org.gnome.shell.extensions.dash-to-dock custom-theme-shrink false $ gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode DEFAULT $ gsettings set org.gnome.shell.extensions.dash-to-dock extend-height false $ gsettings set org.gnome.shell.extensions.dash-to-dock dock-pozition BOTTOMNetspeed High Ubunterra Wallpaper Plank 替换 Ubuntu dock sudo apt remove gnome-shell-extension-ubuntu-dock sudo apt install plank同时还需要关闭Dash to dock add Plank to ‘startup applications#PlankThemesLocation: ~/.local/share/plank/themes 隐藏ubuntu dockhider-hash 时间移动到顶栏右侧move=clock 下载 Mc-OS CTLina主题www.gnome-look.org/p/1241688/ 更换Start-here的 activities.svg","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"leouas.top/tags/Linux/"}]},{"title":"code style test","slug":"geek-hexo-blog-code-style-test","date":"2020-02-14T07:15:05.000Z","updated":"2020-02-14T07:15:05.000Z","comments":true,"path":"geek-hexo-blog-code-style-test/","link":"","permalink":"leouas.top/geek-hexo-blog-code-style-test/","excerpt":"","text":"&#39;use strict&#39;; var pagination = require(&#39;hexo-pagination&#39;); module.exports = function(locals){ var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) { if(a.top &amp;&amp; b.top) { if(a.top == b.top) return b.date - a.date; else return b.top - a.top; } else if(a.top &amp;&amp; !b.top) { return -1; } else if(!a.top &amp;&amp; b.top) { return 1; } else return b.date - a.date; }); var paginationDir = config.pagination_dir || &#39;page&#39;; return pagination(&#39;&#39;, posts, { perPage: config.index_generator.per_page, layout: [&#39;index&#39;, &#39;archive&#39;], format: paginationDir + &#39;/%d/&#39;, data: { __index: true } }); };","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[]},{"title":"GitPage Custom Domain","slug":"issues-github-custom-domain","date":"2020-02-14T05:25:21.000Z","updated":"2020-02-14T05:25:21.000Z","comments":true,"path":"issues-github-custom-domain/","link":"","permalink":"leouas.top/issues-github-custom-domain/","excerpt":"","text":"problem：每次配置 custom domain 之后，再次 hexo deploy 之后，custom domain 会被重置失效 Solution：$ cd hexo/source $ vim CNAME在CANME文件中输入自己的网址参照 Xu Sheng’s Blog","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"leouas.top/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"leouas.top/tags/blog/"}]},{"title":"Banner","slug":"geek-hexo-blog-banner","date":"2020-02-14T04:53:10.000Z","updated":"2020-02-14T04:53:10.000Z","comments":true,"path":"geek-hexo-blog-banner/","link":"","permalink":"leouas.top/geek-hexo-blog-banner/","excerpt":"","text":"我的博客是部署在 gitpages 上的，由于长城墙（Great Firewall）的 存在，访问速度不稳定，一开始我放在 blog 的 hander 的 banner.png 是直接放在 /blog/themes/landscape/source/img 中的，加载速度慢。现在改用了图床，换成了图片外链 $ vim /hexo/themes/landscape/source/css/_partial/header.styl修改为 background: url(https://ftp.bmp.ovh/imgs/2020/02/6667f5f5e7130078.jpg) center #000","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"leouas.top/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"leouas.top/tags/blog/"}]},{"title":"Markdown","slug":"geek-markdown","date":"2020-02-14T04:01:53.000Z","updated":"2020-02-14T04:01:53.000Z","comments":true,"path":"geek-markdown/","link":"","permalink":"leouas.top/geek-markdown/","excerpt":"","text":"以下是效果 这是一级标题这是二级标题这是三级标题这是四级标题这是五级标题这是六级标题加粗斜体斜体加粗删除线 引用 引用 引用分割线(三个或三个以上* -) 无序列表 无序列表 无序列表 有序列表 有序列表 有序列表 列表嵌套 列表嵌套（三个空格） myblog 代码 代码块","categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"leouas.top/tags/markdown/"}]},{"title":"OCR3500","slug":"mics-ocr500","date":"2019-10-01T02:34:03.000Z","updated":"2019-10-01T02:34:03.000Z","comments":true,"path":"mics-ocr500/","link":"","permalink":"leouas.top/mics-ocr500/","excerpt":"","text":"曾经也疯狂过","categories":[{"name":"mics","slug":"mics","permalink":"leouas.top/categories/mics/"}],"tags":[{"name":"pic","slug":"pic","permalink":"leouas.top/tags/pic/"}]}],"categories":[{"name":"geek","slug":"geek","permalink":"leouas.top/categories/geek/"},{"name":"share","slug":"share","permalink":"leouas.top/categories/share/"},{"name":"whut","slug":"whut","permalink":"leouas.top/categories/whut/"},{"name":"mics","slug":"mics","permalink":"leouas.top/categories/mics/"},{"name":"books","slug":"books","permalink":"leouas.top/categories/books/"}],"tags":[{"name":"warface","slug":"warface","permalink":"leouas.top/tags/warface/"},{"name":"Games","slug":"Games","permalink":"leouas.top/tags/Games/"},{"name":"ps","slug":"ps","permalink":"leouas.top/tags/ps/"},{"name":"JavaScript","slug":"JavaScript","permalink":"leouas.top/tags/JavaScript/"},{"name":"工程力学实验","slug":"工程力学实验","permalink":"leouas.top/tags/%E5%B7%A5%E7%A8%8B%E5%8A%9B%E5%AD%A6%E5%AE%9E%E9%AA%8C/"},{"name":"proxy","slug":"proxy","permalink":"leouas.top/tags/proxy/"},{"name":"hexo","slug":"hexo","permalink":"leouas.top/tags/hexo/"},{"name":"tools","slug":"tools","permalink":"leouas.top/tags/tools/"},{"name":"pic","slug":"pic","permalink":"leouas.top/tags/pic/"},{"name":"工程力学","slug":"工程力学","permalink":"leouas.top/tags/%E5%B7%A5%E7%A8%8B%E5%8A%9B%E5%AD%A6/"},{"name":"sublime text","slug":"sublime-text","permalink":"leouas.top/tags/sublime-text/"},{"name":"高分子化学","slug":"高分子化学","permalink":"leouas.top/tags/%E9%AB%98%E5%88%86%E5%AD%90%E5%8C%96%E5%AD%A6/"},{"name":"JOJO","slug":"JOJO","permalink":"leouas.top/tags/JOJO/"},{"name":"sakura","slug":"sakura","permalink":"leouas.top/tags/sakura/"},{"name":"图床","slug":"图床","permalink":"leouas.top/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"English","slug":"English","permalink":"leouas.top/tags/English/"},{"name":"blog","slug":"blog","permalink":"leouas.top/tags/blog/"},{"name":"github","slug":"github","permalink":"leouas.top/tags/github/"},{"name":"terminal","slug":"terminal","permalink":"leouas.top/tags/terminal/"},{"name":"Windows","slug":"Windows","permalink":"leouas.top/tags/Windows/"},{"name":"Linux","slug":"Linux","permalink":"leouas.top/tags/Linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"leouas.top/tags/Ubuntu/"},{"name":"ssl","slug":"ssl","permalink":"leouas.top/tags/ssl/"},{"name":"nginx","slug":"nginx","permalink":"leouas.top/tags/nginx/"},{"name":"vim","slug":"vim","permalink":"leouas.top/tags/vim/"},{"name":"ahk","slug":"ahk","permalink":"leouas.top/tags/ahk/"},{"name":"markdown","slug":"markdown","permalink":"leouas.top/tags/markdown/"}]}